A51 MACRO ASSEMBLER  GSMSIM300                                                            11/09/2012 17:30:04 PAGE     1


MACRO ASSEMBLER A51 V8.02
OBJECT MODULE PLACED IN GSMSIM300.OBJ
ASSEMBLER INVOKED BY: C:\Keil\C51\BIN\A51.EXE GSMSIM300.src PR(.\GSMSIM300.ls1) EP DEBUG

LOC  OBJ            LINE     SOURCE

                       1     ; .\GSMSIM300.SRC generated from: GSMSIM300.c
                       2     ; COMPILER INVOKED BY:
                       3     ;        C:\Keil\C51\BIN\C51.EXE GSMSIM300.c LARGE BROWSE DEBUG OBJECTEXTEND SRC(.\GSMSIM30
                             0.SRC)
                       4     
                       5     $nomod51 
                       6     
                       7     NAME    GSMSIM300
                       8     
  00B7                 9     ModuleSelect0   BIT     0B0H.7
  00B6                10     ModuleSelect1   BIT     0B0H.6
  0080                11     P0      DATA    080H
  0090                12     P1      DATA    090H
  00A0                13     P2      DATA    0A0H
  00B0                14     P3      DATA    0B0H
  00B4                15     T0      BIT     0B0H.4
  00D6                16     AC      BIT     0D0H.6
  00B5                17     T1      BIT     0B0H.5
  0090                18     T2      BIT     090H.0
  00AF                19     EA      BIT     0A8H.7
  00A8                20     IE      DATA    0A8H
  00CE                21     EXF2    BIT     0C8H.6
  00B7                22     RD      BIT     0B0H.7
  00AC                23     ES      BIT     0A8H.4
  00B8                24     IP      DATA    0B8H
  0098                25     RI      BIT     098H.0
  00B2                26     INT0    BIT     0B0H.2
  00D7                27     CY      BIT     0D0H.7
  0099                28     TI      BIT     098H.1
  00B3                29     INT1    BIT     0B0H.3
  00CB                30     RCAP2H  DATA    0CBH
  0086                31     Keyboard_key_10 BIT     080H.6
  00BC                32     PS      BIT     0B8H.4
  0081                33     SP      DATA    081H
  0085                34     Keyboard_key_11 BIT     080H.5
  0091                35     T2EX    BIT     090H.1
  0084                36     Keyboard_key_12 BIT     080H.4
  00D2                37     OV      BIT     0D0H.2
  00CA                38     RCAP2L  DATA    0CAH
  00C9                39     C_T2    BIT     0C8H.1
  00B6                40     WR      BIT     0B0H.6
  00CD                41     RCLK    BIT     0C8H.5
  0095                42     lcd_d5  BIT     090H.5
  0080                43     Buzzer_pin      BIT     080H.0
  0096                44     lcd_d6  BIT     090H.6
  00CC                45     TCLK    BIT     0C8H.4
  0099                46     SBUF    DATA    099H
  0087                47     PCON    DATA    087H
  0098                48     SCON    DATA    098H
  0089                49     TMOD    DATA    089H
  0088                50     TCON    DATA    088H
  0092                51     RS_lcd  BIT     090H.2
  0089                52     IE0     BIT     088H.1
  008B                53     IE1     BIT     088H.3
  00F0                54     B       DATA    0F0H
  00C8                55     CP_RL2  BIT     0C8H.0
  0083                56     EM_lock_pin     BIT     080H.3
  00E0                57     ACC     DATA    0E0H
A51 MACRO ASSEMBLER  GSMSIM300                                                            11/09/2012 17:30:04 PAGE     2

  00A9                58     ET0     BIT     0A8H.1
  00AB                59     ET1     BIT     0A8H.3
  008D                60     TF0     BIT     088H.5
  00AD                61     ET2     BIT     0A8H.5
  008F                62     TF1     BIT     088H.7
  00CF                63     TF2     BIT     0C8H.7
  009A                64     RB8     BIT     098H.2
  008C                65     TH0     DATA    08CH
  00A8                66     EX0     BIT     0A8H.0
  0088                67     IT0     BIT     088H.0
  008D                68     TH1     DATA    08DH
  009B                69     TB8     BIT     098H.3
  00AA                70     EX1     BIT     0A8H.2
  008A                71     IT1     BIT     088H.2
  00CD                72     TH2     DATA    0CDH
  00D0                73     P       BIT     0D0H.0
  0094                74     lcd_d4_lsb      BIT     090H.4
  009F                75     SM0     BIT     098H.7
  008A                76     TL0     DATA    08AH
  009E                77     SM1     BIT     098H.6
  008B                78     TL1     DATA    08BH
  009D                79     SM2     BIT     098H.5
  00CC                80     TL2     DATA    0CCH
  0097                81     lcd_d7_msb      BIT     090H.7
  00B9                82     PT0     BIT     0B8H.1
  00BB                83     PT1     BIT     0B8H.3
  00D3                84     RS0     BIT     0D0H.3
  00BD                85     PT2     BIT     0B8H.5
  008C                86     TR0     BIT     088H.4
  00D4                87     RS1     BIT     0D0H.4
  008E                88     TR1     BIT     088H.6
  00CA                89     TR2     BIT     0C8H.2
  00B8                90     PX0     BIT     0B8H.0
  00BA                91     PX1     BIT     0B8H.2
  0083                92     DPH     DATA    083H
  0093                93     Enable_lcd      BIT     090H.3
  0082                94     DPL     DATA    082H
  00CB                95     EXEN2   BIT     0C8H.3
  009C                96     REN     BIT     098H.4
  00C8                97     T2CON   DATA    0C8H
  00B0                98     RXD     BIT     0B0H.0
  00B1                99     TXD     BIT     0B0H.1
  00A0               100     Keyboard_key_1  BIT     0A0H.0
  00A1               101     Keyboard_key_2  BIT     0A0H.1
  00A2               102     Keyboard_key_3  BIT     0A0H.2
  00A3               103     Keyboard_key_4  BIT     0A0H.3
  00D5               104     F0      BIT     0D0H.5
  00A4               105     Keyboard_key_5  BIT     0A0H.4
  00A5               106     Keyboard_key_6  BIT     0A0H.5
  00A6               107     Keyboard_key_7  BIT     0A0H.6
  00A7               108     Keyboard_key_8  BIT     0A0H.7
  0087               109     Keyboard_key_9  BIT     080H.7
  00D0               110     PSW     DATA    0D0H
  0082               111     EM_lock_enabe_button    BIT     080H.2
                     112     ?PR?fn_GSM_Send_Init?GSMSIM300           SEGMENT CODE 
                     113     ?XD?fn_GSM_Send_Init?GSMSIM300           SEGMENT XDATA OVERLAYABLE 
                     114     ?PR?_fnGSMSendMessage?GSMSIM300          SEGMENT CODE 
                     115     ?XD?_fnGSMSendMessage?GSMSIM300          SEGMENT XDATA OVERLAYABLE 
                     116     ?PR?fn_GSM_Recieve_Init?GSMSIM300        SEGMENT CODE 
                     117     ?PR?fn_GSM_Send_Recieve_Init?GSMSIM300   SEGMENT CODE 
                     118     ?PR?fnSetMODEMToReceive?GSMSIM300        SEGMENT CODE 
                     119     ?PR?_fnDeleteMessageIndex?GSMSIM300      SEGMENT CODE 
                     120     ?XD?_fnDeleteMessageIndex?GSMSIM300      SEGMENT XDATA OVERLAYABLE 
                     121     ?PR?fnDeleteAllMessages?GSMSIM300        SEGMENT CODE 
                     122     ?PR?fnDeleteInboxMessages?GSMSIM300      SEGMENT CODE 
                     123     ?PR?fnDeleteAllUnReadMessages?GSMSIM300  SEGMENT CODE 
A51 MACRO ASSEMBLER  GSMSIM300                                                            11/09/2012 17:30:04 PAGE     3

                     124     ?PR?fnDeleteAllSentMessages?GSMSIM300    SEGMENT CODE 
                     125     ?PR?fnDeleteAllUnSentMessages?GSMSIM300  SEGMENT CODE 
                     126     ?PR?fnDeleteAllReceivedMessages?GSMSIM300 SEGMENT CODE 
                     127     ?PR?chfnGSMNetworkReadyCheck?GSMSIM300   SEGMENT CODE 
                     128     ?XD?chfnGSMNetworkReadyCheck?GSMSIM300   SEGMENT XDATA OVERLAYABLE 
                     129     ?PR?uchfnCheckInboxStatus?GSMSIM300      SEGMENT CODE 
                     130     ?PR?uchfnCheckFirstMessageStatus?GSMSIM300 SEGMENT CODE 
                     131     ?XD?uchfnCheckFirstMessageStatus?GSMSIM300 SEGMENT XDATA OVERLAYABLE 
                     132     ?PR?fnExtractPhoneNoAndMessage?GSMSIM300 SEGMENT CODE 
                     133     ?XD?fnExtractPhoneNoAndMessage?GSMSIM300 SEGMENT XDATA OVERLAYABLE 
                     134     ?PR?fn_Disable_Echo?GSMSIM300            SEGMENT CODE 
                     135     ?PR?fnSendCarriageReturn?GSMSIM300       SEGMENT CODE 
                     136     ?PR?fnSendLineFeed?GSMSIM300             SEGMENT CODE 
                     137     ?PR?fnSendSUBCtrlZ?GSMSIM300             SEGMENT CODE 
                     138     ?PR?fnSendDoubleQuotes?GSMSIM300         SEGMENT CODE 
                     139     ?CO?GSMSIM300        SEGMENT CODE 
                     140     ?XD?GSMSIM300        SEGMENT XDATA 
                     141             EXTRN   CODE (_delay_in_ms)
                     142             EXTRN   CODE (_printf)
                     143             EXTRN   XDATA (?_printf?BYTE)
                     144             EXTRN   CODE (_delay_in_seconds)
                     145             EXTRN   CODE (_fnModuleSelect)
                     146             EXTRN   CODE (_strstr)
                     147             EXTRN   XDATA (?_strstr?BYTE)
                     148             EXTRN   CODE (fn_Receive_Serial)
                     149             EXTRN   CODE (_delay_ms)
                     150             EXTRN   CODE (?C?STRCPY)
                     151             PUBLIC  guchGSMPhoneNumber
                     152             PUBLIC  displaybuffer
                     153             PUBLIC  guchphonenumberpacket
                     154             PUBLIC  guchCompleteGSMDataPacket
                     155             PUBLIC  guchmessagepacket
                     156             PUBLIC  fnSendDoubleQuotes
                     157             PUBLIC  fnSendSUBCtrlZ
                     158             PUBLIC  fnSendLineFeed
                     159             PUBLIC  fnSendCarriageReturn
                     160             PUBLIC  fn_Disable_Echo
                     161             PUBLIC  fnExtractPhoneNoAndMessage
                     162             PUBLIC  uchfnCheckFirstMessageStatus
                     163             PUBLIC  uchfnCheckInboxStatus
                     164             PUBLIC  chfnGSMNetworkReadyCheck
                     165             PUBLIC  fnDeleteAllReceivedMessages
                     166             PUBLIC  fnDeleteAllUnSentMessages
                     167             PUBLIC  fnDeleteAllSentMessages
                     168             PUBLIC  fnDeleteAllUnReadMessages
                     169             PUBLIC  fnDeleteInboxMessages
                     170             PUBLIC  fnDeleteAllMessages
                     171             PUBLIC  _fnDeleteMessageIndex
                     172             PUBLIC  fnSetMODEMToReceive
                     173             PUBLIC  fn_GSM_Send_Recieve_Init
                     174             PUBLIC  fn_GSM_Recieve_Init
                     175             PUBLIC  ?_fnGSMSendMessage?BYTE
                     176             PUBLIC  _fnGSMSendMessage
                     177             PUBLIC  fn_GSM_Send_Init
                     178     
----                 179             RSEG  ?XD?fn_GSM_Send_Init?GSMSIM300
0000                 180     ?fn_GSM_Send_Init?BYTE:
0000                 181               i?040:   DS   1
                     182     
----                 183             RSEG  ?XD?_fnGSMSendMessage?GSMSIM300
0000                 184     ?_fnGSMSendMessage?BYTE:
0000                 185     guchGSMPhoneNumber?141:   DS   3
0003                 186             ORG  3
0003                 187     guchCompleteGSMDataPacket?142:   DS   3
                     188     
----                 189             RSEG  ?XD?fnExtractPhoneNoAndMessage?GSMSIM300
A51 MACRO ASSEMBLER  GSMSIM300                                                            11/09/2012 17:30:04 PAGE     4

0000                 190     ?fnExtractPhoneNoAndMessage?BYTE:
0000                 191       databuff?1552:   DS   20
0014                 192             ORG  20
0014                 193          index?1553:   DS   1
                     194     
----                 195             RSEG  ?XD?chfnGSMNetworkReadyCheck?GSMSIM300
0000                 196     ?chfnGSMNetworkReadyCheck?BYTE:
0000                 197     uchResponseFromGSM?1244:   DS   15
000F                 198             ORG  15
000F                 199       uchCount?1245:   DS   1
                     200     
----                 201             RSEG  ?XD?uchfnCheckFirstMessageStatus?GSMSIM300
0000                 202     ?uchfnCheckFirstMessageStatus?BYTE:
0000                 203              i?1449:   DS   1
                     204     
----                 205             RSEG  ?XD?_fnDeleteMessageIndex?GSMSIM300
0000                 206     ?_fnDeleteMessageIndex?BYTE:
0000                 207           Index?543:   DS   1
                     208     
----                 209             RSEG  ?XD?GSMSIM300
0000                 210     guchmessagepacket:   DS   40
0028                 211     guchCompleteGSMDataPacket:   DS   160
00C8                 212     guchphonenumberpacket:   DS   15
00D7                 213       displaybuffer:   DS   70
011D                 214     guchGSMPhoneNumber:   DS   15
                     215     
----                 216             RSEG  ?CO?GSMSIM300
0000                 217     ?SC_0:
0000 415400          218             DB  'A' ,'T' ,000H
                     219     
0003                 220     ?SC_3:
0003 41542B43        221             DB  'A' ,'T' ,'+' ,'C' ,'M' ,'G' ,'F' ,'=' ,'1' ,000H
0007 4D47463D                
000B 3100                    
                     222     
000D                 223     ?SC_13:
000D 41542B43        224             DB  'A' ,'T' ,'+' ,'C' ,'M' ,'G' ,'S' ,'=' ,000H
0011 4D47533D                
0015 00                      
                     225     
0016                 226     ?SC_22:
0016 257300          227             DB  '%' ,'s' ,000H
                     228     
0019                 229     ?SC_25:
0019 41542B43        230             DB  'A' ,'T' ,'+' ,'C' ,'N' ,'M' ,'I' ,'=' ,'2' ,',' 
001D 4E4D493D                
0021 322C                    
0023 312C302C        231             DB  '1' ,',' ,'0' ,',' ,'0' ,',' ,'0' ,000H
0027 302C3000                
                     232     
002B                 233     ?SC_43:
002B 41542B43        234             DB  'A' ,'T' ,'+' ,'C' ,'M' ,'G' ,'D' ,'=' ,000H
002F 4D47443D                
0033 00                      
                     235     
0034                 236     ?SC_52:
0034 256400          237             DB  '%' ,'d' ,000H
                     238     
0037                 239     ?SC_55:
0037 41542B43        240             DB  'A' ,'T' ,'+' ,'C' ,'M' ,'G' ,'D' ,'A' ,'=' ,000H
003B 4D474441                
003F 3D00                    
                     241     
0041                 242     ?SC_65:
0041 44454C20        243             DB  'D' ,'E' ,'L' ,' ' ,'A' ,'L' ,'L' ,000H
0045 414C4C00                
A51 MACRO ASSEMBLER  GSMSIM300                                                            11/09/2012 17:30:04 PAGE     5

                     244     
0049                 245     ?SC_73:
0049 44454C20        246             DB  'D' ,'E' ,'L' ,' ' ,'I' ,'N' ,'B' ,'O' ,'X' ,000H
004D 494E424F                
0051 5800                    
                     247     
0053                 248     ?SC_83:
0053 44454C20        249             DB  'D' ,'E' ,'L' ,' ' ,'U' ,'N' ,'R' ,'E' ,'A' ,'D' 
0057 554E5245                
005B 4144                    
005D 00              250             DB  000H
                     251     
005E                 252     ?SC_94:
005E 44454C20        253             DB  'D' ,'E' ,'L' ,' ' ,'S' ,'E' ,'N' ,'T' ,000H
0062 53454E54                
0066 00                      
                     254     
0067                 255     ?SC_103:
0067 44454C20        256             DB  'D' ,'E' ,'L' ,' ' ,'U' ,'N' ,'S' ,'E' ,'N' ,'T' 
006B 554E5345                
006F 4E54                    
0071 00              257             DB  000H
                     258     
0072                 259     ?SC_114:
0072 41542B43        260             DB  'A' ,'T' ,'+' ,'C' ,'P' ,'I' ,'N' ,'?' ,000H
0076 50494E3F                
007A 00                      
                     261     
007B                 262     ?SC_123:
007B 52454144        263             DB  'R' ,'E' ,'A' ,'D' ,'Y' ,000H
007F 5900                    
                     264     
0081                 265     ?SC_129:
0081 41542B43        266             DB  'A' ,'T' ,'+' ,'C' ,'M' ,'G' ,'R' ,'=' ,'1' ,000H
0085 4D47523D                
0089 3100                    
                     267     
008B                 268     ?SC_139:
008B 554E5245        269             DB  'U' ,'N' ,'R' ,'E' ,'A' ,'D' ,000H
008F 414400                  
                     270     
0092                 271     ?SC_146:
0092 52454144        272             DB  'R' ,'E' ,'A' ,'D' ,000H
0096 00                      
                     273     
0097                 274     ?SC_151:
0097 41544530        275             DB  'A' ,'T' ,'E' ,'0' ,000H
009B 00                      
                     276     
009C                 277     ?SC_156:
009C 256300          278             DB  '%' ,'c' ,000H
                     279     
                     280     ; /*
                     281     ;     filename  :GSMSIM300.c
                     282     ;       description     :transmit and receive GSM data by SIM300 MODEM
                     283     ;       author          :Nitin
                     284     ;       date            :13.11.11                 
                     285     ; */
                     286     ; 
                     287     ; 
                     288     ; #include <reg52.h>
                     289     ; #include <stdio.h>                /* prototype declarations for I/O functions */
                     290     ; #include <string.h>
                     291     ; #include <stdlib.h>
                     292     ; 
                     293     ; #include "PinAllocation.h"
A51 MACRO ASSEMBLER  GSMSIM300                                                            11/09/2012 17:30:04 PAGE     6

                     294     ; #include "delay.h"
                     295     ; #include "serial_codes.h"
                     296     ; #include "GSMSIM300.h"
                     297     ; #include "ProjectMain.h"
                     298     ; #include "lcd.h"
                     299     ; 
                     300     ; unsigned char guchmessagepacket[40],guchphonenumberpacket[15],guchCompleteGSMDataPacket[1
                             60];
                     301     ; unsigned char guchGSMPhoneNumber[15],displaybuffer[70];
                     302     ; 
                     303     ; #define       CR                                                              0x0D // Car
                             riage Return = Enter
                     304     ; #define LF                                                            0x0A // Line Feed =
                              New Line Symbol
                     305     ; 
                     306     ; void fn_GSM_Send_Init(void)
                     307     
----                 308             RSEG  ?PR?fn_GSM_Send_Init?GSMSIM300
0000                 309     fn_GSM_Send_Init:
                     310             USING   0
                     311                             ; SOURCE LINE # 27
                     312     ; {
                     313                             ; SOURCE LINE # 28
                     314     ;       unsigned char i;
                     315     ;       fnModuleSelect(SELECT_GSM_ON_UART);
                     316                             ; SOURCE LINE # 30
0000 7F01            317             MOV     R7,#01H
0002 120000   F      318             LCALL   _fnModuleSelect
                     319     ;       for(i=0;i<30;i++)
                     320                             ; SOURCE LINE # 31
0005 E4              321             CLR     A
0006 900000   F      322             MOV     DPTR,#i?040
0009 F0              323             MOVX    @DPTR,A
000A                 324     ?C0001:
                     325     ;       {
                     326                             ; SOURCE LINE # 32
                     327     ;               printf("AT");
                     328                             ; SOURCE LINE # 33
000A 7BFF            329             MOV     R3,#0FFH
000C 7A00     F      330             MOV     R2,#HIGH (?SC_0)
000E 7900     F      331             MOV     R1,#LOW (?SC_0)
0010 120000   F      332             LCALL   _printf
                     333     ;               fnSendCarriageReturn();
                     334                             ; SOURCE LINE # 34
0013 120000   F      335             LCALL   fnSendCarriageReturn
                     336     ;               delay_in_ms(30);
                     337                             ; SOURCE LINE # 35
0016 7F1E            338             MOV     R7,#01EH
0018 120000   F      339             LCALL   _delay_in_ms
                     340     ;       }
                     341                             ; SOURCE LINE # 36
001B 900000   F      342             MOV     DPTR,#i?040
001E E0              343             MOVX    A,@DPTR
001F 04              344             INC     A
0020 F0              345             MOVX    @DPTR,A
0021 E0              346             MOVX    A,@DPTR
0022 C3              347             CLR     C
0023 941E            348             SUBB    A,#01EH
0025 40E3            349             JC      ?C0001
0027                 350     ?C0002:
                     351     ;       printf("AT");
                     352                             ; SOURCE LINE # 37
0027 7BFF            353             MOV     R3,#0FFH
0029 7A00     F      354             MOV     R2,#HIGH (?SC_0)
002B 7900     F      355             MOV     R1,#LOW (?SC_0)
002D 120000   F      356             LCALL   _printf
A51 MACRO ASSEMBLER  GSMSIM300                                                            11/09/2012 17:30:04 PAGE     7

                     357     ;       fnSendCarriageReturn();
                     358                             ; SOURCE LINE # 38
0030 120000   F      359             LCALL   fnSendCarriageReturn
                     360     ;       printf("AT+CMGF=1");
                     361                             ; SOURCE LINE # 39
0033 7BFF            362             MOV     R3,#0FFH
0035 7A00     F      363             MOV     R2,#HIGH (?SC_3)
0037 7900     F      364             MOV     R1,#LOW (?SC_3)
0039 120000   F      365             LCALL   _printf
                     366     ;       fnSendCarriageReturn();
                     367                             ; SOURCE LINE # 40
003C 120000   F      368             LCALL   fnSendCarriageReturn
                     369     ;       // printf("AT+CSCA=");
                     370     ;       // printf("%s",msg_centre_num);
                     371     ;       fnSendCarriageReturn();
                     372                             ; SOURCE LINE # 43
003F 120000   F      373             LCALL   fnSendCarriageReturn
                     374     ;       delay_in_ms(30);
                     375                             ; SOURCE LINE # 44
0042 7F1E            376             MOV     R7,#01EH
0044 120000   F      377             LCALL   _delay_in_ms
                     378     ;       fn_Disable_Echo();
                     379                             ; SOURCE LINE # 45
0047 120000   F      380             LCALL   fn_Disable_Echo
                     381     ;       delay_in_ms(30);
                     382                             ; SOURCE LINE # 46
004A 7F1E            383             MOV     R7,#01EH
004C 020000   F      384             LJMP    _delay_in_ms
                     385     ; END OF fn_GSM_Send_Init
                     386     
                     387     ; }
                     388     ;  
                     389     ; 
                     390     ;                                                                                       
                     391     ; void fnGSMSendMessage(unsigned char *guchGSMPhoneNumber, unsigned char *guchCompleteGSMDa
                             taPacket)
                     392     
----                 393             RSEG  ?PR?_fnGSMSendMessage?GSMSIM300
0000                 394     _fnGSMSendMessage:
                     395             USING   0
                     396                             ; SOURCE LINE # 51
0000 900000   F      397             MOV     DPTR,#guchGSMPhoneNumber?141
0003 EB              398             MOV     A,R3
0004 F0              399             MOVX    @DPTR,A
0005 A3              400             INC     DPTR
0006 EA              401             MOV     A,R2
0007 F0              402             MOVX    @DPTR,A
0008 A3              403             INC     DPTR
0009 E9              404             MOV     A,R1
000A F0              405             MOVX    @DPTR,A
                     406     ; {      
                     407                             ; SOURCE LINE # 52
                     408     ;     fnModuleSelect(SELECT_GSM_ON_UART);
                     409                             ; SOURCE LINE # 53
000B 7F01            410             MOV     R7,#01H
000D 120000   F      411             LCALL   _fnModuleSelect
                     412     ;       printf("AT+CMGS="); // Command to send Message
                     413                             ; SOURCE LINE # 54
0010 7BFF            414             MOV     R3,#0FFH
0012 7A00     F      415             MOV     R2,#HIGH (?SC_13)
0014 7900     F      416             MOV     R1,#LOW (?SC_13)
0016 120000   F      417             LCALL   _printf
                     418     ;       fnSendDoubleQuotes();
                     419                             ; SOURCE LINE # 55
0019 120000   F      420             LCALL   fnSendDoubleQuotes
                     421     ;       printf("%s",guchGSMPhoneNumber);
A51 MACRO ASSEMBLER  GSMSIM300                                                            11/09/2012 17:30:04 PAGE     8

                     422                             ; SOURCE LINE # 56
001C 900000   F      423             MOV     DPTR,#guchGSMPhoneNumber?141
001F E0              424             MOVX    A,@DPTR
0020 F9              425             MOV     R1,A
0021 A3              426             INC     DPTR
0022 E0              427             MOVX    A,@DPTR
0023 FA              428             MOV     R2,A
0024 A3              429             INC     DPTR
0025 E0              430             MOVX    A,@DPTR
0026 900000   F      431             MOV     DPTR,#?_printf?BYTE+03H
0029 C9              432             XCH     A,R1
002A F0              433             MOVX    @DPTR,A
002B A3              434             INC     DPTR
002C EA              435             MOV     A,R2
002D F0              436             MOVX    @DPTR,A
002E A3              437             INC     DPTR
002F E9              438             MOV     A,R1
0030 F0              439             MOVX    @DPTR,A
0031 7BFF            440             MOV     R3,#0FFH
0033 7A00     F      441             MOV     R2,#HIGH (?SC_22)
0035 7900     F      442             MOV     R1,#LOW (?SC_22)
0037 120000   F      443             LCALL   _printf
                     444     ;       fnSendDoubleQuotes();
                     445                             ; SOURCE LINE # 57
003A 120000   F      446             LCALL   fnSendDoubleQuotes
                     447     ;       fnSendCarriageReturn();
                     448                             ; SOURCE LINE # 58
003D 120000   F      449             LCALL   fnSendCarriageReturn
                     450     ;       delay_ms(20);
                     451                             ; SOURCE LINE # 59
0040 7F14            452             MOV     R7,#014H
0042 7E00            453             MOV     R6,#00H
0044 120000   F      454             LCALL   _delay_ms
                     455     ;       printf("%s",guchCompleteGSMDataPacket);
                     456                             ; SOURCE LINE # 60
0047 900000   F      457             MOV     DPTR,#guchCompleteGSMDataPacket?142
004A E0              458             MOVX    A,@DPTR
004B F9              459             MOV     R1,A
004C A3              460             INC     DPTR
004D E0              461             MOVX    A,@DPTR
004E FA              462             MOV     R2,A
004F A3              463             INC     DPTR
0050 E0              464             MOVX    A,@DPTR
0051 900000   F      465             MOV     DPTR,#?_printf?BYTE+03H
0054 C9              466             XCH     A,R1
0055 F0              467             MOVX    @DPTR,A
0056 A3              468             INC     DPTR
0057 EA              469             MOV     A,R2
0058 F0              470             MOVX    @DPTR,A
0059 A3              471             INC     DPTR
005A E9              472             MOV     A,R1
005B F0              473             MOVX    @DPTR,A
005C 7BFF            474             MOV     R3,#0FFH
005E 7A00     F      475             MOV     R2,#HIGH (?SC_22)
0060 7900     F      476             MOV     R1,#LOW (?SC_22)
0062 120000   F      477             LCALL   _printf
                     478     ;       fnSendSUBCtrlZ();
                     479                             ; SOURCE LINE # 61
0065 120000   F      480             LCALL   fnSendSUBCtrlZ
                     481     ;       //      while((fn_Receive_Serial)!= '+');
                     482     ;       delay_ms(100);                                   
                     483                             ; SOURCE LINE # 63
0068 7F64            484             MOV     R7,#064H
006A 7E00            485             MOV     R6,#00H
006C 020000   F      486             LJMP    _delay_ms
                     487     ; END OF _fnGSMSendMessage
A51 MACRO ASSEMBLER  GSMSIM300                                                            11/09/2012 17:30:04 PAGE     9

                     488     
                     489     ;       // Waiting for Carriage Return Symbol to appear from GSM as response
                     490     ;       // Response expected here is          OK <CR><LF>
                     491     ; }
                     492     ; 
                     493     ; 
                     494     ; void fn_GSM_Recieve_Init(void)
                     495     
----                 496             RSEG  ?PR?fn_GSM_Recieve_Init?GSMSIM300
0000                 497     fn_GSM_Recieve_Init:
                     498             USING   0
                     499                             ; SOURCE LINE # 69
                     500     ; {
                     501                             ; SOURCE LINE # 70
                     502     ;       fnModuleSelect(SELECT_GSM_ON_UART);
                     503                             ; SOURCE LINE # 71
0000 7F01            504             MOV     R7,#01H
0002 120000   F      505             LCALL   _fnModuleSelect
                     506     ;       printf("AT+CNMI=2,1,0,0,0"); // Command to save to memory to and raise interrrupt  
                                  
                     507                             ; SOURCE LINE # 72
0005 7BFF            508             MOV     R3,#0FFH
0007 7A00     F      509             MOV     R2,#HIGH (?SC_25)
0009 7900     F      510             MOV     R1,#LOW (?SC_25)
000B 120000   F      511             LCALL   _printf
                     512     ;       fnSendCarriageReturn();
                     513                             ; SOURCE LINE # 73
000E 120000   F      514             LCALL   fnSendCarriageReturn
                     515     ;       fnSendLineFeed();
                     516                             ; SOURCE LINE # 74
0011 120000   F      517             LCALL   fnSendLineFeed
0014                 518     ?C0006:
                     519     ; 
                     520     ;       while((fn_Receive_Serial())!=0x0a);
                     521                             ; SOURCE LINE # 76
0014 120000   F      522             LCALL   fn_Receive_Serial
0017 BF0AFA          523             CJNE    R7,#0AH,?C0006
001A                 524     ?C0007:
                     525     ;       // Response expected here is          OK <CR><LF>
                     526     ; }
                     527                             ; SOURCE LINE # 78
001A                 528     ?C0008:
001A 22              529             RET     
                     530     ; END OF fn_GSM_Recieve_Init
                     531     
                     532     ; 
                     533     ; void fn_GSM_Send_Recieve_Init(void)
                     534     
----                 535             RSEG  ?PR?fn_GSM_Send_Recieve_Init?GSMSIM300
0000                 536     fn_GSM_Send_Recieve_Init:
                     537             USING   0
                     538                             ; SOURCE LINE # 80
                     539     ; {
                     540                             ; SOURCE LINE # 81
                     541     ;       fnModuleSelect(SELECT_GSM_ON_UART);
                     542                             ; SOURCE LINE # 82
0000 7F01            543             MOV     R7,#01H
0002 120000   F      544             LCALL   _fnModuleSelect
                     545     ;       fn_GSM_Send_Init();
                     546                             ; SOURCE LINE # 83
0005 120000   F      547             LCALL   fn_GSM_Send_Init
                     548     ;       fn_GSM_Recieve_Init();
                     549                             ; SOURCE LINE # 84
0008 020000   F      550             LJMP    fn_GSM_Recieve_Init
                     551     ; END OF fn_GSM_Send_Recieve_Init
                     552     
A51 MACRO ASSEMBLER  GSMSIM300                                                            11/09/2012 17:30:04 PAGE    10

                     553     ; }
                     554     ; 
                     555     ; 
                     556     ; void fnSetMODEMToReceive(void) //New message indication +CNMI
                     557     
----                 558             RSEG  ?PR?fnSetMODEMToReceive?GSMSIM300
0000                 559     fnSetMODEMToReceive:
                     560             USING   0
                     561                             ; SOURCE LINE # 88
                     562     ; {
                     563                             ; SOURCE LINE # 89
                     564     ;       fnModuleSelect(SELECT_GSM_ON_UART);
                     565                             ; SOURCE LINE # 90
0000 7F01            566             MOV     R7,#01H
0002 120000   F      567             LCALL   _fnModuleSelect
                     568     ;       printf("AT+CNMI=2,1,0,0,0"); // Command to save to memory to and raise interrrupt  
                                  
                     569                             ; SOURCE LINE # 91
0005 7BFF            570             MOV     R3,#0FFH
0007 7A00     F      571             MOV     R2,#HIGH (?SC_25)
0009 7900     F      572             MOV     R1,#LOW (?SC_25)
000B 120000   F      573             LCALL   _printf
                     574     ;       fnSendCarriageReturn();
                     575                             ; SOURCE LINE # 92
000E 120000   F      576             LCALL   fnSendCarriageReturn
                     577     ;       fnSendLineFeed();
                     578                             ; SOURCE LINE # 93
0011 120000   F      579             LCALL   fnSendLineFeed
0014                 580     ?C0010:
                     581     ; 
                     582     ;       while((fn_Receive_Serial())!=0x0a);
                     583                             ; SOURCE LINE # 95
0014 120000   F      584             LCALL   fn_Receive_Serial
0017 BF0AFA          585             CJNE    R7,#0AH,?C0010
001A                 586     ?C0011:
                     587     ;       // Response expected here is          OK <CR><LF>
                     588     ; 
                     589     ; }
                     590                             ; SOURCE LINE # 98
001A                 591     ?C0012:
001A 22              592             RET     
                     593     ; END OF fnSetMODEMToReceive
                     594     
                     595     ; void fnDeleteMessageIndex(unsigned char Index)
                     596     
----                 597             RSEG  ?PR?_fnDeleteMessageIndex?GSMSIM300
0000                 598     _fnDeleteMessageIndex:
                     599             USING   0
                     600                             ; SOURCE LINE # 99
0000 900000   F      601             MOV     DPTR,#Index?543
0003 EF              602             MOV     A,R7
0004 F0              603             MOVX    @DPTR,A
                     604     ; {
                     605                             ; SOURCE LINE # 100
                     606     ;       fnModuleSelect(SELECT_GSM_ON_UART);
                     607                             ; SOURCE LINE # 101
0005 7F01            608             MOV     R7,#01H
0007 120000   F      609             LCALL   _fnModuleSelect
                     610     ;       printf("AT+CMGD="); // Command to delete
                     611                             ; SOURCE LINE # 102
000A 7BFF            612             MOV     R3,#0FFH
000C 7A00     F      613             MOV     R2,#HIGH (?SC_43)
000E 7900     F      614             MOV     R1,#LOW (?SC_43)
0010 120000   F      615             LCALL   _printf
                     616     ;       printf("%d",Index);
                     617                             ; SOURCE LINE # 103
A51 MACRO ASSEMBLER  GSMSIM300                                                            11/09/2012 17:30:04 PAGE    11

0013 7BFF            618             MOV     R3,#0FFH
0015 7A00     F      619             MOV     R2,#HIGH (?SC_52)
0017 7900     F      620             MOV     R1,#LOW (?SC_52)
0019 900000   F      621             MOV     DPTR,#Index?543
001C E0              622             MOVX    A,@DPTR
001D 900000   F      623             MOV     DPTR,#?_printf?BYTE+03H
0020 F0              624             MOVX    @DPTR,A
0021 120000   F      625             LCALL   _printf
                     626     ;       fnSendCarriageReturn();
                     627                             ; SOURCE LINE # 104
0024 120000   F      628             LCALL   fnSendCarriageReturn
                     629     ;       fnSendLineFeed();
                     630                             ; SOURCE LINE # 105
0027 020000   F      631             LJMP    fnSendLineFeed
                     632     ; END OF _fnDeleteMessageIndex
                     633     
                     634     ; 
                     635     ;   // Waiting for Carriage Return Symbol to appear from GSM as response
                     636     ;       // Response expected here is          OK <CR><LF>
                     637     ; }
                     638     ; 
                     639     ; void fnDeleteAllMessages(void)
                     640     
----                 641             RSEG  ?PR?fnDeleteAllMessages?GSMSIM300
0000                 642     fnDeleteAllMessages:
                     643             USING   0
                     644                             ; SOURCE LINE # 111
                     645     ; {
                     646                             ; SOURCE LINE # 112
                     647     ;       fnModuleSelect(SELECT_GSM_ON_UART);
                     648                             ; SOURCE LINE # 113
0000 7F01            649             MOV     R7,#01H
0002 120000   F      650             LCALL   _fnModuleSelect
                     651     ;       printf("AT+CMGDA="); // Command to delete all messages
                     652                             ; SOURCE LINE # 114
0005 7BFF            653             MOV     R3,#0FFH
0007 7A00     F      654             MOV     R2,#HIGH (?SC_55)
0009 7900     F      655             MOV     R1,#LOW (?SC_55)
000B 120000   F      656             LCALL   _printf
                     657     ;       fnSendDoubleQuotes();
                     658                             ; SOURCE LINE # 115
000E 120000   F      659             LCALL   fnSendDoubleQuotes
                     660     ;       printf("DEL ALL");
                     661                             ; SOURCE LINE # 116
0011 7BFF            662             MOV     R3,#0FFH
0013 7A00     F      663             MOV     R2,#HIGH (?SC_65)
0015 7900     F      664             MOV     R1,#LOW (?SC_65)
0017 120000   F      665             LCALL   _printf
                     666     ;       fnSendDoubleQuotes();
                     667                             ; SOURCE LINE # 117
001A 120000   F      668             LCALL   fnSendDoubleQuotes
                     669     ; 
                     670     ;       fnSendCarriageReturn();
                     671                             ; SOURCE LINE # 119
001D 120000   F      672             LCALL   fnSendCarriageReturn
                     673     ;       fnSendLineFeed();
                     674                             ; SOURCE LINE # 120
0020 020000   F      675             LJMP    fnSendLineFeed
                     676     ; END OF fnDeleteAllMessages
                     677     
                     678     ; 
                     679     ;       // Waiting for Carriage Return Symbol to appear from GSM as response
                     680     ;       // Response expected here is          OK <CR><LF>
                     681     ; }
                     682     ; 
                     683     ; void fnDeleteInboxMessages(void)
A51 MACRO ASSEMBLER  GSMSIM300                                                            11/09/2012 17:30:04 PAGE    12

                     684     
----                 685             RSEG  ?PR?fnDeleteInboxMessages?GSMSIM300
0000                 686     fnDeleteInboxMessages:
                     687             USING   0
                     688                             ; SOURCE LINE # 126
                     689     ; {
                     690                             ; SOURCE LINE # 127
                     691     ;       fnModuleSelect(SELECT_GSM_ON_UART);
                     692                             ; SOURCE LINE # 128
0000 7F01            693             MOV     R7,#01H
0002 120000   F      694             LCALL   _fnModuleSelect
                     695     ;       printf("AT+CMGDA="); // Command to delete all messages
                     696                             ; SOURCE LINE # 129
0005 7BFF            697             MOV     R3,#0FFH
0007 7A00     F      698             MOV     R2,#HIGH (?SC_55)
0009 7900     F      699             MOV     R1,#LOW (?SC_55)
000B 120000   F      700             LCALL   _printf
                     701     ;       fnSendDoubleQuotes();
                     702                             ; SOURCE LINE # 130
000E 120000   F      703             LCALL   fnSendDoubleQuotes
                     704     ;       printf("DEL INBOX");
                     705                             ; SOURCE LINE # 131
0011 7BFF            706             MOV     R3,#0FFH
0013 7A00     F      707             MOV     R2,#HIGH (?SC_73)
0015 7900     F      708             MOV     R1,#LOW (?SC_73)
0017 120000   F      709             LCALL   _printf
                     710     ;       fnSendDoubleQuotes();
                     711                             ; SOURCE LINE # 132
001A 120000   F      712             LCALL   fnSendDoubleQuotes
                     713     ; 
                     714     ;       fnSendCarriageReturn();
                     715                             ; SOURCE LINE # 134
001D 120000   F      716             LCALL   fnSendCarriageReturn
                     717     ; 
                     718     ;       fnSendLineFeed();
                     719                             ; SOURCE LINE # 136
0020 120000   F      720             LCALL   fnSendLineFeed
0023                 721     ?C0015:
                     722     ; 
                     723     ;       while((fn_Receive_Serial())!= CR);
                     724                             ; SOURCE LINE # 138
0023 120000   F      725             LCALL   fn_Receive_Serial
0026 BF0DFA          726             CJNE    R7,#0DH,?C0015
0029                 727     ?C0016:
                     728     ;       delay_in_seconds(1);
                     729                             ; SOURCE LINE # 139
0029 7F01            730             MOV     R7,#01H
002B 020000   F      731             LJMP    _delay_in_seconds
                     732     ; END OF fnDeleteInboxMessages
                     733     
                     734     ;       
                     735     ;   // Waiting for Carriage Return Symbol to appear from GSM as response
                     736     ; 
                     737     ;       // Response expected here is          OK <CR><LF>
                     738     ; 
                     739     ; }
                     740     ; void fnDeleteAllUnReadMessages(void)
                     741     
----                 742             RSEG  ?PR?fnDeleteAllUnReadMessages?GSMSIM300
0000                 743     fnDeleteAllUnReadMessages:
                     744             USING   0
                     745                             ; SOURCE LINE # 146
                     746     ; {
                     747                             ; SOURCE LINE # 147
                     748     ;       fnModuleSelect(SELECT_GSM_ON_UART);
                     749                             ; SOURCE LINE # 148
A51 MACRO ASSEMBLER  GSMSIM300                                                            11/09/2012 17:30:04 PAGE    13

0000 7F01            750             MOV     R7,#01H
0002 120000   F      751             LCALL   _fnModuleSelect
                     752     ;       printf("AT+CMGDA="); // Command to delete all messages
                     753                             ; SOURCE LINE # 149
0005 7BFF            754             MOV     R3,#0FFH
0007 7A00     F      755             MOV     R2,#HIGH (?SC_55)
0009 7900     F      756             MOV     R1,#LOW (?SC_55)
000B 120000   F      757             LCALL   _printf
                     758     ;       fnSendDoubleQuotes();
                     759                             ; SOURCE LINE # 150
000E 120000   F      760             LCALL   fnSendDoubleQuotes
                     761     ;       printf("DEL UNREAD");
                     762                             ; SOURCE LINE # 151
0011 7BFF            763             MOV     R3,#0FFH
0013 7A00     F      764             MOV     R2,#HIGH (?SC_83)
0015 7900     F      765             MOV     R1,#LOW (?SC_83)
0017 120000   F      766             LCALL   _printf
                     767     ;       fnSendDoubleQuotes();
                     768                             ; SOURCE LINE # 152
001A 120000   F      769             LCALL   fnSendDoubleQuotes
                     770     ; 
                     771     ;       fnSendCarriageReturn();
                     772                             ; SOURCE LINE # 154
001D 120000   F      773             LCALL   fnSendCarriageReturn
                     774     ;       fnSendLineFeed();
                     775                             ; SOURCE LINE # 155
0020 020000   F      776             LJMP    fnSendLineFeed
                     777     ; END OF fnDeleteAllUnReadMessages
                     778     
                     779     ; 
                     780     ; 
                     781     ;  // Waiting for Carriage Return Symbol to appear from GSM as response
                     782     ;       // Response expected here is          OK <CR><LF>
                     783     ; }
                     784     ; void fnDeleteAllSentMessages(void)
                     785     
----                 786             RSEG  ?PR?fnDeleteAllSentMessages?GSMSIM300
0000                 787     fnDeleteAllSentMessages:
                     788             USING   0
                     789                             ; SOURCE LINE # 161
                     790     ; {
                     791                             ; SOURCE LINE # 162
                     792     ;       fnModuleSelect(SELECT_GSM_ON_UART);
                     793                             ; SOURCE LINE # 163
0000 7F01            794             MOV     R7,#01H
0002 120000   F      795             LCALL   _fnModuleSelect
                     796     ;       printf("AT+CMGDA="); // Command to delete all messages
                     797                             ; SOURCE LINE # 164
0005 7BFF            798             MOV     R3,#0FFH
0007 7A00     F      799             MOV     R2,#HIGH (?SC_55)
0009 7900     F      800             MOV     R1,#LOW (?SC_55)
000B 120000   F      801             LCALL   _printf
                     802     ;       fnSendDoubleQuotes();
                     803                             ; SOURCE LINE # 165
000E 120000   F      804             LCALL   fnSendDoubleQuotes
                     805     ;       printf("DEL SENT");
                     806                             ; SOURCE LINE # 166
0011 7BFF            807             MOV     R3,#0FFH
0013 7A00     F      808             MOV     R2,#HIGH (?SC_94)
0015 7900     F      809             MOV     R1,#LOW (?SC_94)
0017 120000   F      810             LCALL   _printf
                     811     ;       fnSendDoubleQuotes();
                     812                             ; SOURCE LINE # 167
001A 120000   F      813             LCALL   fnSendDoubleQuotes
                     814     ; 
                     815     ;       fnSendCarriageReturn();
A51 MACRO ASSEMBLER  GSMSIM300                                                            11/09/2012 17:30:04 PAGE    14

                     816                             ; SOURCE LINE # 169
001D 120000   F      817             LCALL   fnSendCarriageReturn
                     818     ;       fnSendLineFeed();
                     819                             ; SOURCE LINE # 170
0020 020000   F      820             LJMP    fnSendLineFeed
                     821     ; END OF fnDeleteAllSentMessages
                     822     
                     823     ;       
                     824     ;   //Waiting for Carriage Return Symbol to appear from GSM as response
                     825     ;       // Response expected here is          OK <CR><LF>
                     826     ; }
                     827     ; void fnDeleteAllUnSentMessages(void)
                     828     
----                 829             RSEG  ?PR?fnDeleteAllUnSentMessages?GSMSIM300
0000                 830     fnDeleteAllUnSentMessages:
                     831             USING   0
                     832                             ; SOURCE LINE # 175
                     833     ; {
                     834                             ; SOURCE LINE # 176
                     835     ;       fnModuleSelect(SELECT_GSM_ON_UART);
                     836                             ; SOURCE LINE # 177
0000 7F01            837             MOV     R7,#01H
0002 120000   F      838             LCALL   _fnModuleSelect
                     839     ;       printf("AT+CMGDA="); // Command to delete all messages;
                     840                             ; SOURCE LINE # 178
0005 7BFF            841             MOV     R3,#0FFH
0007 7A00     F      842             MOV     R2,#HIGH (?SC_55)
0009 7900     F      843             MOV     R1,#LOW (?SC_55)
000B 120000   F      844             LCALL   _printf
                     845     ;       fnSendDoubleQuotes();
                     846                             ; SOURCE LINE # 179
000E 120000   F      847             LCALL   fnSendDoubleQuotes
                     848     ;       printf("DEL UNSENT");
                     849                             ; SOURCE LINE # 180
0011 7BFF            850             MOV     R3,#0FFH
0013 7A00     F      851             MOV     R2,#HIGH (?SC_103)
0015 7900     F      852             MOV     R1,#LOW (?SC_103)
0017 120000   F      853             LCALL   _printf
                     854     ;       fnSendDoubleQuotes();
                     855                             ; SOURCE LINE # 181
001A 120000   F      856             LCALL   fnSendDoubleQuotes
                     857     ; 
                     858     ;       fnSendCarriageReturn();
                     859                             ; SOURCE LINE # 183
001D 120000   F      860             LCALL   fnSendCarriageReturn
                     861     ;       fnSendLineFeed();
                     862                             ; SOURCE LINE # 184
0020 120000   F      863             LCALL   fnSendLineFeed
0023                 864     ?C0020:
                     865     ; 
                     866     ;       while((fn_Receive_Serial())!='K');  // Waiting for Carriage Return Symbol to appear
                              from GSM as response
                     867                             ; SOURCE LINE # 186
0023 120000   F      868             LCALL   fn_Receive_Serial
0026 BF4BFA          869             CJNE    R7,#04BH,?C0020
0029                 870     ?C0021:
                     871     ;       // Response expected here is          OK <CR><LF>
                     872     ; }
                     873                             ; SOURCE LINE # 188
0029                 874     ?C0022:
0029 22              875             RET     
                     876     ; END OF fnDeleteAllUnSentMessages
                     877     
                     878     ; void fnDeleteAllReceivedMessages(void)
                     879     
----                 880             RSEG  ?PR?fnDeleteAllReceivedMessages?GSMSIM300
A51 MACRO ASSEMBLER  GSMSIM300                                                            11/09/2012 17:30:04 PAGE    15

0000                 881     fnDeleteAllReceivedMessages:
                     882             USING   0
                     883                             ; SOURCE LINE # 189
                     884     ; {
                     885                             ; SOURCE LINE # 190
                     886     ;       fnModuleSelect(SELECT_GSM_ON_UART);
                     887                             ; SOURCE LINE # 191
0000 7F01            888             MOV     R7,#01H
0002 120000   F      889             LCALL   _fnModuleSelect
                     890     ;       printf("AT+CMGDA="); // Command to delete all messages
                     891                             ; SOURCE LINE # 192
0005 7BFF            892             MOV     R3,#0FFH
0007 7A00     F      893             MOV     R2,#HIGH (?SC_55)
0009 7900     F      894             MOV     R1,#LOW (?SC_55)
000B 120000   F      895             LCALL   _printf
                     896     ;       fnSendDoubleQuotes();
                     897                             ; SOURCE LINE # 193
000E 120000   F      898             LCALL   fnSendDoubleQuotes
                     899     ;       printf("DEL INBOX");
                     900                             ; SOURCE LINE # 194
0011 7BFF            901             MOV     R3,#0FFH
0013 7A00     F      902             MOV     R2,#HIGH (?SC_73)
0015 7900     F      903             MOV     R1,#LOW (?SC_73)
0017 120000   F      904             LCALL   _printf
                     905     ;       fnSendDoubleQuotes();
                     906                             ; SOURCE LINE # 195
001A 120000   F      907             LCALL   fnSendDoubleQuotes
                     908     ; 
                     909     ;       fnSendCarriageReturn();
                     910                             ; SOURCE LINE # 197
001D 120000   F      911             LCALL   fnSendCarriageReturn
                     912     ;       fnSendLineFeed();
                     913                             ; SOURCE LINE # 198
0020 120000   F      914             LCALL   fnSendLineFeed
0023                 915     ?C0023:
                     916     ; 
                     917     ;       while((fn_Receive_Serial())!= CR);  // Waiting for Carriage Return Symbol to appear
                              from GSM as response
                     918                             ; SOURCE LINE # 200
0023 120000   F      919             LCALL   fn_Receive_Serial
0026 BF0DFA          920             CJNE    R7,#0DH,?C0023
0029                 921     ?C0024:
                     922     ;       // Response expected here is          OK <CR><LF>
                     923     ; }
                     924                             ; SOURCE LINE # 202
0029                 925     ?C0025:
0029 22              926             RET     
                     927     ; END OF fnDeleteAllReceivedMessages
                     928     
                     929     ; 
                     930     ; 
                     931     ; char chfnGSMNetworkReadyCheck(void)
                     932     
----                 933             RSEG  ?PR?chfnGSMNetworkReadyCheck?GSMSIM300
0000                 934     chfnGSMNetworkReadyCheck:
                     935             USING   0
                     936                             ; SOURCE LINE # 205
                     937     ; {
                     938                             ; SOURCE LINE # 206
                     939     ;       unsigned char uchResponseFromGSM[15];
                     940     ;       unsigned char uchCount=0;
                     941                             ; SOURCE LINE # 208
0000 E4              942             CLR     A
0001 900000   F      943             MOV     DPTR,#uchCount?1245
0004 F0              944             MOVX    @DPTR,A
                     945     ;       unsigned char uchTemp;
A51 MACRO ASSEMBLER  GSMSIM300                                                            11/09/2012 17:30:04 PAGE    16

                     946     ; 
                     947     ;       fnModuleSelect(SELECT_GSM_ON_UART);
                     948                             ; SOURCE LINE # 211
0005 7F01            949             MOV     R7,#01H
0007 120000   F      950             LCALL   _fnModuleSelect
                     951     ;       printf("AT+CPIN?");
                     952                             ; SOURCE LINE # 212
000A 7BFF            953             MOV     R3,#0FFH
000C 7A00     F      954             MOV     R2,#HIGH (?SC_114)
000E 7900     F      955             MOV     R1,#LOW (?SC_114)
0010 120000   F      956             LCALL   _printf
                     957     ;       fnSendCarriageReturn();
                     958                             ; SOURCE LINE # 213
0013 120000   F      959             LCALL   fnSendCarriageReturn
                     960     ;       fnSendLineFeed();
                     961                             ; SOURCE LINE # 214
0016 120000   F      962             LCALL   fnSendLineFeed
0019                 963     ?C0026:
                     964     ; 
                     965     ;       while((fn_Receive_Serial())!='+');  // Waiting for '+' Symbol to appear from GSM as
                              response
                     966                             ; SOURCE LINE # 216
0019 120000   F      967             LCALL   fn_Receive_Serial
001C BF2BFA          968             CJNE    R7,#02BH,?C0026
001F                 969     ?C0027:
                     970     ; 
                     971     ;       uchCount=0;
                     972                             ; SOURCE LINE # 218
001F E4              973             CLR     A
0020 900000   F      974             MOV     DPTR,#uchCount?1245
                     975     ;       uchTemp = fn_Receive_Serial();  // First char of Response
                     976                             ; SOURCE LINE # 219
                     977     ;---- Variable 'uchTemp?1246' assigned to Register 'R7' ----
0023 8019            978             SJMP    ?C0062
0025                 979     ?C0028:
                     980     ;       while(uchTemp!=0x0D)  // Fill Response till carriage return Symbol appears
                     981                             ; SOURCE LINE # 220
0025 EF              982             MOV     A,R7
0026 640D            983             XRL     A,#0DH
0028 601A            984             JZ      ?C0029
                     985     ;       {
                     986                             ; SOURCE LINE # 221
                     987     ;               uchResponseFromGSM[uchCount] = uchTemp;
                     988                             ; SOURCE LINE # 222
002A 900000   F      989             MOV     DPTR,#uchCount?1245
002D E0              990             MOVX    A,@DPTR
002E 2400     F      991             ADD     A,#LOW (uchResponseFromGSM?1244)
0030 F582            992             MOV     DPL,A
0032 E4              993             CLR     A
0033 3400     F      994             ADDC    A,#HIGH (uchResponseFromGSM?1244)
0035 F583            995             MOV     DPH,A
0037 EF              996             MOV     A,R7
0038 F0              997             MOVX    @DPTR,A
                     998     ;               uchCount++;
                     999                             ; SOURCE LINE # 223
0039 900000   F     1000             MOV     DPTR,#uchCount?1245
003C E0             1001             MOVX    A,@DPTR
003D 04             1002             INC     A
003E                1003     ?C0062:
003E F0             1004             MOVX    @DPTR,A
                    1005     ;               uchTemp = fn_Receive_Serial();  
                    1006                             ; SOURCE LINE # 224
003F 120000   F     1007             LCALL   fn_Receive_Serial
                    1008     ;       }
                    1009                             ; SOURCE LINE # 225
0042 80E1           1010             SJMP    ?C0028
A51 MACRO ASSEMBLER  GSMSIM300                                                            11/09/2012 17:30:04 PAGE    17

0044                1011     ?C0029:
                    1012     ;       uchResponseFromGSM[uchCount] = 0;
                    1013                             ; SOURCE LINE # 226
0044 900000   F     1014             MOV     DPTR,#uchCount?1245
0047 E0             1015             MOVX    A,@DPTR
0048 2400     F     1016             ADD     A,#LOW (uchResponseFromGSM?1244)
004A F582           1017             MOV     DPL,A
004C E4             1018             CLR     A
004D 3400     F     1019             ADDC    A,#HIGH (uchResponseFromGSM?1244)
004F F583           1020             MOV     DPH,A
0051 E4             1021             CLR     A
0052 F0             1022             MOVX    @DPTR,A
                    1023     ;       
                    1024     ;                       //fnModuleSelect(SELECT_PC_ON_UART);
                    1025     ;                       //printf("uchResponseFromGSM= %s",uchResponseFromGSM);
                    1026     ;                       
                    1027     ;       if(strstr(uchResponseFromGSM,"READY"))
                    1028                             ; SOURCE LINE # 231
0053 900000   F     1029             MOV     DPTR,#?_strstr?BYTE+03H
0056 74FF           1030             MOV     A,#0FFH
0058 F0             1031             MOVX    @DPTR,A
0059 A3             1032             INC     DPTR
005A 7400     F     1033             MOV     A,#HIGH (?SC_123)
005C F0             1034             MOVX    @DPTR,A
005D A3             1035             INC     DPTR
005E 7400     F     1036             MOV     A,#LOW (?SC_123)
0060 F0             1037             MOVX    @DPTR,A
0061 7B01           1038             MOV     R3,#01H
0063 7A00     F     1039             MOV     R2,#HIGH (uchResponseFromGSM?1244)
0065 7900     F     1040             MOV     R1,#LOW (uchResponseFromGSM?1244)
0067 120000   F     1041             LCALL   _strstr
006A EA             1042             MOV     A,R2
006B 49             1043             ORL     A,R1
006C 4B             1044             ORL     A,R3
006D 6003           1045             JZ      ?C0030
                    1046     ;       {
                    1047                             ; SOURCE LINE # 232
                    1048     ;               return(NETWORK_READY);                  
                    1049                             ; SOURCE LINE # 233
006F 7F01           1050             MOV     R7,#01H
0071 22             1051             RET     
                    1052     ;       }
                    1053                             ; SOURCE LINE # 234
0072                1054     ?C0030:
                    1055     ;       return(NETWORK_NOT_READY);
                    1056                             ; SOURCE LINE # 235
0072 7F00           1057             MOV     R7,#00H
                    1058     ; }
                    1059                             ; SOURCE LINE # 236
0074                1060     ?C0031:
0074 22             1061             RET     
                    1062     ; END OF chfnGSMNetworkReadyCheck
                    1063     
                    1064     ; 
                    1065     ; 
                    1066     ; 
                    1067     ; unsigned char uchfnCheckInboxStatus(void)
                    1068     
----                1069             RSEG  ?PR?uchfnCheckInboxStatus?GSMSIM300
0000                1070     uchfnCheckInboxStatus:
                    1071             USING   0
                    1072                             ; SOURCE LINE # 240
                    1073     ; {
                    1074                             ; SOURCE LINE # 241
                    1075     ; 
                    1076     ;       unsigned char uchSerialData,uchStatus;
A51 MACRO ASSEMBLER  GSMSIM300                                                            11/09/2012 17:30:04 PAGE    18

                    1077     ;       
                    1078     ;       fnModuleSelect(SELECT_GSM_ON_UART);
                    1079                             ; SOURCE LINE # 245
0000 7F01           1080             MOV     R7,#01H
0002 120000   F     1081             LCALL   _fnModuleSelect
                    1082     ;       printf("AT+CMGR=1");   // Reading message at location No 1 in Inbox
                    1083                             ; SOURCE LINE # 246
0005 7BFF           1084             MOV     R3,#0FFH
0007 7A00     F     1085             MOV     R2,#HIGH (?SC_129)
0009 7900     F     1086             MOV     R1,#LOW (?SC_129)
000B 120000   F     1087             LCALL   _printf
                    1088     ;       fnSendCarriageReturn();                                                            
                                    
                    1089                             ; SOURCE LINE # 247
000E 120000   F     1090             LCALL   fnSendCarriageReturn
                    1091     ;       fnSendLineFeed();
                    1092                             ; SOURCE LINE # 248
0011 120000   F     1093             LCALL   fnSendLineFeed
                    1094     ; 
                    1095     ;       uchSerialData=fn_Receive_Serial();
                    1096                             ; SOURCE LINE # 250
                    1097     ;---- Variable 'uchSerialData?1347' assigned to Register 'R7' ----
0014 800A           1098             SJMP    ?C0063
0016                1099     ?C0032:
                    1100     ;       while(((uchSerialData!='O')&&(uchSerialData!='+')))     // If OK only is received t
                             he NO message present at Location 1
                    1101                             ; SOURCE LINE # 251
0016 EF             1102             MOV     A,R7
0017 644F           1103             XRL     A,#04FH
0019 600A           1104             JZ      ?C0033
001B EF             1105             MOV     A,R7
001C 642B           1106             XRL     A,#02BH
001E 6005           1107             JZ      ?C0033
                    1108     ;                                                               // incase any message is pr
                             esent it will start with +CMGR:                      
                    1109     ;       {
                    1110                             ; SOURCE LINE # 253
                    1111     ;               uchSerialData=fn_Receive_Serial(); 
                    1112                             ; SOURCE LINE # 254
0020                1113     ?C0063:
0020 120000   F     1114             LCALL   fn_Receive_Serial
                    1115     ;       }
                    1116                             ; SOURCE LINE # 255
0023 80F1           1117             SJMP    ?C0032
0025                1118     ?C0033:
                    1119     ; 
                    1120     ;    switch(uchSerialData)
                    1121                             ; SOURCE LINE # 257
0025 EF             1122             MOV     A,R7
0026 24D5           1123             ADD     A,#0D5H
0028 6007           1124             JZ      ?C0037
002A 24DC           1125             ADD     A,#0DCH
002C 7006           1126             JNZ     ?C0038
                    1127     ;    {
                    1128                             ; SOURCE LINE # 258
                    1129     ;                                          
                    1130     ;       case 'O':  
                    1131                             ; SOURCE LINE # 260
002E                1132     ?C0035:
                    1133     ;               return(INBOXEMPTY);
                    1134                             ; SOURCE LINE # 261
002E 7F03           1135             MOV     R7,#03H
0030 22             1136             RET     
                    1137     ;           break;
                    1138                             ; SOURCE LINE # 262
                    1139     ; 
A51 MACRO ASSEMBLER  GSMSIM300                                                            11/09/2012 17:30:04 PAGE    19

                    1140     ;     case '+':  
                    1141                             ; SOURCE LINE # 264
0031                1142     ?C0037:
                    1143     ;               uchStatus=uchfnCheckFirstMessageStatus();
                    1144                             ; SOURCE LINE # 265
0031 020000   F     1145             LJMP    uchfnCheckFirstMessageStatus
                    1146     ;---- Variable 'uchStatus?1348' assigned to Register 'R7' ----
                    1147     ;           return(uchStatus);
                    1148                             ; SOURCE LINE # 266
                    1149     ;           break;
                    1150                             ; SOURCE LINE # 267
                    1151     ; 
                    1152     ;     default:  
                    1153                             ; SOURCE LINE # 269
0034                1154     ?C0038:
                    1155     ;               return(ERROR);
                    1156                             ; SOURCE LINE # 270
0034 7F02           1157             MOV     R7,#02H
0036 22             1158             RET     
                    1159     ; END OF uchfnCheckInboxStatus
                    1160     
                    1161     ;           break;
                    1162     ;       }
                    1163     ; 
                    1164     ;       return(0);
                    1165     ; }  
                    1166     ; 
                    1167     ; 
                    1168     ; unsigned char uchfnCheckFirstMessageStatus(void)
                    1169     
----                1170             RSEG  ?PR?uchfnCheckFirstMessageStatus?GSMSIM300
0000                1171     uchfnCheckFirstMessageStatus:
                    1172             USING   0
                    1173                             ; SOURCE LINE # 278
                    1174     ; {
                    1175                             ; SOURCE LINE # 279
                    1176     ;       unsigned char i=0,uchSerialData=0;
                    1177                             ; SOURCE LINE # 280
0000 E4             1178             CLR     A
0001 900000   F     1179             MOV     DPTR,#i?1449
0004 F0             1180             MOVX    @DPTR,A
                    1181     ;---- Variable 'uchSerialData?1450' assigned to Register 'R7' ----
0005 FF             1182             MOV     R7,A
                    1183     ;       uchSerialData=fn_Receive_Serial();
                    1184                             ; SOURCE LINE # 281
0006 120000   F     1185             LCALL   fn_Receive_Serial
0009                1186     ?C0039:
                    1187     ;       while((uchSerialData)!=0x0d)
                    1188                             ; SOURCE LINE # 282
0009 EF             1189             MOV     A,R7
000A 640D           1190             XRL     A,#0DH
000C 6018           1191             JZ      ?C0040
                    1192     ;       {  
                    1193                             ; SOURCE LINE # 283
                    1194     ;               uchSerialData=fn_Receive_Serial();
                    1195                             ; SOURCE LINE # 284
000E 120000   F     1196             LCALL   fn_Receive_Serial
                    1197     ;               displaybuffer[i++]=uchSerialData;
                    1198                             ; SOURCE LINE # 285
0011 900000   F     1199             MOV     DPTR,#i?1449
0014 E0             1200             MOVX    A,@DPTR
0015 FE             1201             MOV     R6,A
0016 04             1202             INC     A
0017 F0             1203             MOVX    @DPTR,A
0018 7400     F     1204             MOV     A,#LOW (displaybuffer)
001A 2E             1205             ADD     A,R6
A51 MACRO ASSEMBLER  GSMSIM300                                                            11/09/2012 17:30:04 PAGE    20

001B F582           1206             MOV     DPL,A
001D E4             1207             CLR     A
001E 3400     F     1208             ADDC    A,#HIGH (displaybuffer)
0020 F583           1209             MOV     DPH,A
0022 EF             1210             MOV     A,R7
0023 F0             1211             MOVX    @DPTR,A
                    1212     ;       }
                    1213                             ; SOURCE LINE # 286
0024 80E3           1214             SJMP    ?C0039
0026                1215     ?C0040:
                    1216     ;       uchSerialData = fn_Receive_Serial();
                    1217                             ; SOURCE LINE # 287
0026 120000   F     1218             LCALL   fn_Receive_Serial
                    1219     ;       displaybuffer[i++] = uchSerialData;                                               
                    1220                             ; SOURCE LINE # 288
0029 8008           1221             SJMP    ?C0064
002B                1222     ?C0041:
                    1223     ;       while((uchSerialData=fn_Receive_Serial())!= '\r')
                    1224                             ; SOURCE LINE # 289
002B 120000   F     1225             LCALL   fn_Receive_Serial
002E EF             1226             MOV     A,R7
002F 640D           1227             XRL     A,#0DH
0031 6015           1228             JZ      ?C0042
                    1229     ;       {
                    1230                             ; SOURCE LINE # 290
                    1231     ;               displaybuffer[i++] = uchSerialData;
                    1232                             ; SOURCE LINE # 291
0033                1233     ?C0064:
0033 900000   F     1234             MOV     DPTR,#i?1449
0036 E0             1235             MOVX    A,@DPTR
0037 FE             1236             MOV     R6,A
0038 04             1237             INC     A
0039 F0             1238             MOVX    @DPTR,A
003A 7400     F     1239             MOV     A,#LOW (displaybuffer)
003C 2E             1240             ADD     A,R6
003D F582           1241             MOV     DPL,A
003F E4             1242             CLR     A
0040 3400     F     1243             ADDC    A,#HIGH (displaybuffer)
0042 F583           1244             MOV     DPH,A
0044 EF             1245             MOV     A,R7
0045 F0             1246             MOVX    @DPTR,A
                    1247     ;       }          
                    1248                             ; SOURCE LINE # 292
0046 80E3           1249             SJMP    ?C0041
0048                1250     ?C0042:
                    1251     ;       
                    1252     ;       displaybuffer[i]='\r';
                    1253                             ; SOURCE LINE # 294
0048 900000   F     1254             MOV     DPTR,#i?1449
004B E0             1255             MOVX    A,@DPTR
004C 2400     F     1256             ADD     A,#LOW (displaybuffer)
004E F582           1257             MOV     DPL,A
0050 E4             1258             CLR     A
0051 3400     F     1259             ADDC    A,#HIGH (displaybuffer)
0053 F583           1260             MOV     DPH,A
0055 740D           1261             MOV     A,#0DH
0057 F0             1262             MOVX    @DPTR,A
                    1263     ;       
                    1264     ;       if (strstr(displaybuffer,"UNREAD") )
                    1265                             ; SOURCE LINE # 296
0058 900000   F     1266             MOV     DPTR,#?_strstr?BYTE+03H
005B 74FF           1267             MOV     A,#0FFH
005D F0             1268             MOVX    @DPTR,A
005E A3             1269             INC     DPTR
005F 7400     F     1270             MOV     A,#HIGH (?SC_139)
0061 F0             1271             MOVX    @DPTR,A
A51 MACRO ASSEMBLER  GSMSIM300                                                            11/09/2012 17:30:04 PAGE    21

0062 A3             1272             INC     DPTR
0063 7400     F     1273             MOV     A,#LOW (?SC_139)
0065 F0             1274             MOVX    @DPTR,A
0066 7B01           1275             MOV     R3,#01H
0068 7A00     F     1276             MOV     R2,#HIGH (displaybuffer)
006A 7900     F     1277             MOV     R1,#LOW (displaybuffer)
006C 120000   F     1278             LCALL   _strstr
006F EA             1279             MOV     A,R2
0070 49             1280             ORL     A,R1
0071 4B             1281             ORL     A,R3
0072 6003           1282             JZ      ?C0043
                    1283     ;       {        
                    1284                             ; SOURCE LINE # 297
                    1285     ;               return(NEWMESSAGE);
                    1286                             ; SOURCE LINE # 298
0074 7F00           1287             MOV     R7,#00H
0076 22             1288             RET     
                    1289     ;       }
                    1290                             ; SOURCE LINE # 299
0077                1291     ?C0043:
                    1292     ;       
                    1293     ;       if (strstr(displaybuffer,"READ") )      
                    1294                             ; SOURCE LINE # 301
0077 900000   F     1295             MOV     DPTR,#?_strstr?BYTE+03H
007A 74FF           1296             MOV     A,#0FFH
007C F0             1297             MOVX    @DPTR,A
007D A3             1298             INC     DPTR
007E 7400     F     1299             MOV     A,#HIGH (?SC_146)
0080 F0             1300             MOVX    @DPTR,A
0081 A3             1301             INC     DPTR
0082 7400     F     1302             MOV     A,#LOW (?SC_146)
0084 F0             1303             MOVX    @DPTR,A
0085 7B01           1304             MOV     R3,#01H
0087 7A00     F     1305             MOV     R2,#HIGH (displaybuffer)
0089 7900     F     1306             MOV     R1,#LOW (displaybuffer)
008B 120000   F     1307             LCALL   _strstr
008E EA             1308             MOV     A,R2
008F 49             1309             ORL     A,R1
0090 4B             1310             ORL     A,R3
0091 6003           1311             JZ      ?C0045
                    1312     ;       {       
                    1313                             ; SOURCE LINE # 302
                    1314     ;               return(NONEWMESSAGE);
                    1315                             ; SOURCE LINE # 303
0093 7F01           1316             MOV     R7,#01H
0095 22             1317             RET     
                    1318     ;       }                                                       
                    1319                             ; SOURCE LINE # 304
0096                1320     ?C0045:
                    1321     ;       else
                    1322     ;       {                                                       
                    1323                             ; SOURCE LINE # 306
                    1324     ;       return(ERROR);                          
                    1325                             ; SOURCE LINE # 307
0096 7F02           1326             MOV     R7,#02H
                    1327     ;       }                                                
                    1328                             ; SOURCE LINE # 308
                    1329     ; }                                                
                    1330                             ; SOURCE LINE # 309
0098                1331     ?C0044:
0098 22             1332             RET     
                    1333     ; END OF uchfnCheckFirstMessageStatus
                    1334     
                    1335     ; 
                    1336     ; void fnExtractPhoneNoAndMessage(void)
                    1337     
A51 MACRO ASSEMBLER  GSMSIM300                                                            11/09/2012 17:30:04 PAGE    22

----                1338             RSEG  ?PR?fnExtractPhoneNoAndMessage?GSMSIM300
0000                1339     fnExtractPhoneNoAndMessage:
                    1340             USING   0
                    1341                             ; SOURCE LINE # 311
                    1342     ; {                                                                             
                    1343                             ; SOURCE LINE # 312
                    1344     ;       unsigned char i=0,databuff[20],index;  
                    1345                             ; SOURCE LINE # 313
                    1346     ;---- Variable 'i?1551' assigned to Register 'R7' ----
0000 E4             1347             CLR     A
0001 FF             1348             MOV     R7,A
0002                1349     ?C0047:
                    1350     ;               
                    1351     ;       while((displaybuffer[i])!='+')
                    1352                             ; SOURCE LINE # 315
0002 7400     F     1353             MOV     A,#LOW (displaybuffer)
0004 2F             1354             ADD     A,R7
0005 F582           1355             MOV     DPL,A
0007 E4             1356             CLR     A
0008 3400     F     1357             ADDC    A,#HIGH (displaybuffer)
000A F583           1358             MOV     DPH,A
000C E0             1359             MOVX    A,@DPTR
000D 642B           1360             XRL     A,#02BH
000F 6003           1361             JZ      ?C0048
                    1362     ;       {
                    1363                             ; SOURCE LINE # 316
                    1364     ;               i++;            
                    1365                             ; SOURCE LINE # 317
0011 0F             1366             INC     R7
                    1367     ;       }
                    1368                             ; SOURCE LINE # 318
0012 80EE           1369             SJMP    ?C0047
0014                1370     ?C0048:
                    1371     ;       index=i; 
                    1372                             ; SOURCE LINE # 319
0014 900000   F     1373             MOV     DPTR,#index?1553
0017 EF             1374             MOV     A,R7
0018 F0             1375             MOVX    @DPTR,A
                    1376     ;       
                    1377     ;       for(i=0;i<=12;i++)
                    1378                             ; SOURCE LINE # 321
0019 E4             1379             CLR     A
001A FF             1380             MOV     R7,A
001B                1381     ?C0049:
                    1382     ;       {                               
                    1383                             ; SOURCE LINE # 322
                    1384     ;               databuff[i]=displaybuffer[index+i];     
                    1385                             ; SOURCE LINE # 323
001B 900000   F     1386             MOV     DPTR,#index?1553
001E E0             1387             MOVX    A,@DPTR
001F 2F             1388             ADD     A,R7
0020 2400     F     1389             ADD     A,#LOW (displaybuffer)
0022 F582           1390             MOV     DPL,A
0024 E4             1391             CLR     A
0025 3400     F     1392             ADDC    A,#HIGH (displaybuffer)
0027 F583           1393             MOV     DPH,A
0029 E0             1394             MOVX    A,@DPTR
002A FE             1395             MOV     R6,A
002B 7400     F     1396             MOV     A,#LOW (databuff?1552)
002D 2F             1397             ADD     A,R7
002E F582           1398             MOV     DPL,A
0030 E4             1399             CLR     A
0031 3400     F     1400             ADDC    A,#HIGH (databuff?1552)
0033 F583           1401             MOV     DPH,A
0035 EE             1402             MOV     A,R6
0036 F0             1403             MOVX    @DPTR,A
A51 MACRO ASSEMBLER  GSMSIM300                                                            11/09/2012 17:30:04 PAGE    23

                    1404     ;       }
                    1405                             ; SOURCE LINE # 324
0037 0F             1406             INC     R7
0038 EF             1407             MOV     A,R7
0039 B40DDF         1408             CJNE    A,#0DH,?C0049
003C                1409     ?C0050:
                    1410     ;       databuff[i]='\0';                                               
                    1411                             ; SOURCE LINE # 325
003C 7400     F     1412             MOV     A,#LOW (databuff?1552)
003E 2F             1413             ADD     A,R7
003F F582           1414             MOV     DPL,A
0041 E4             1415             CLR     A
0042 3400     F     1416             ADDC    A,#HIGH (databuff?1552)
0044 F583           1417             MOV     DPH,A
0046 E4             1418             CLR     A
0047 F0             1419             MOVX    @DPTR,A
                    1420     ;       strcpy(guchphonenumberpacket,databuff); 
                    1421                             ; SOURCE LINE # 326
0048 7800     F     1422             MOV     R0,#LOW (guchphonenumberpacket)
004A 7C00     F     1423             MOV     R4,#HIGH (guchphonenumberpacket)
004C 7D01           1424             MOV     R5,#01H
004E 7B01           1425             MOV     R3,#01H
0050 7A00     F     1426             MOV     R2,#HIGH (databuff?1552)
0052 7900     F     1427             MOV     R1,#LOW (databuff?1552)
0054 120000   F     1428             LCALL   ?C?STRCPY
                    1429     ;       i=0;                                                                    
                    1430                             ; SOURCE LINE # 327
0057 E4             1431             CLR     A
0058 FF             1432             MOV     R7,A
0059                1433     ?C0052:
                    1434     ;       while(displaybuffer[i]!=0x0a)
                    1435                             ; SOURCE LINE # 328
0059 7400     F     1436             MOV     A,#LOW (displaybuffer)
005B 2F             1437             ADD     A,R7
005C F582           1438             MOV     DPL,A
005E E4             1439             CLR     A
005F 3400     F     1440             ADDC    A,#HIGH (displaybuffer)
0061 F583           1441             MOV     DPH,A
0063 E0             1442             MOVX    A,@DPTR
0064 640A           1443             XRL     A,#0AH
0066 6003           1444             JZ      ?C0053
                    1445     ;       {
                    1446                             ; SOURCE LINE # 329
                    1447     ;               i++;
                    1448                             ; SOURCE LINE # 330
0068 0F             1449             INC     R7
                    1450     ;       }
                    1451                             ; SOURCE LINE # 331
0069 80EE           1452             SJMP    ?C0052
006B                1453     ?C0053:
                    1454     ;       index = ++i;
                    1455                             ; SOURCE LINE # 332
006B 0F             1456             INC     R7
006C 900000   F     1457             MOV     DPTR,#index?1553
006F EF             1458             MOV     A,R7
0070 F0             1459             MOVX    @DPTR,A
                    1460     ;       i=0;
                    1461                             ; SOURCE LINE # 333
0071 E4             1462             CLR     A
0072 FF             1463             MOV     R7,A
0073                1464     ?C0054:
                    1465     ;       while(displaybuffer[index+i]!='\r')
                    1466                             ; SOURCE LINE # 334
0073 900000   F     1467             MOV     DPTR,#index?1553
0076 E0             1468             MOVX    A,@DPTR
0077 2F             1469             ADD     A,R7
A51 MACRO ASSEMBLER  GSMSIM300                                                            11/09/2012 17:30:04 PAGE    24

0078 2400     F     1470             ADD     A,#LOW (displaybuffer)
007A F582           1471             MOV     DPL,A
007C E4             1472             CLR     A
007D 3400     F     1473             ADDC    A,#HIGH (displaybuffer)
007F F583           1474             MOV     DPH,A
0081 E0             1475             MOVX    A,@DPTR
0082 FE             1476             MOV     R6,A
0083 640D           1477             XRL     A,#0DH
0085 600F           1478             JZ      ?C0055
                    1479     ;       {
                    1480                             ; SOURCE LINE # 335
                    1481     ;               databuff[i]=displaybuffer[index+i];
                    1482                             ; SOURCE LINE # 336
0087 7400     F     1483             MOV     A,#LOW (databuff?1552)
0089 2F             1484             ADD     A,R7
008A F582           1485             MOV     DPL,A
008C E4             1486             CLR     A
008D 3400     F     1487             ADDC    A,#HIGH (databuff?1552)
008F F583           1488             MOV     DPH,A
0091 EE             1489             MOV     A,R6
0092 F0             1490             MOVX    @DPTR,A
                    1491     ;               i++;
                    1492                             ; SOURCE LINE # 337
0093 0F             1493             INC     R7
                    1494     ;       }
                    1495                             ; SOURCE LINE # 338
0094 80DD           1496             SJMP    ?C0054
0096                1497     ?C0055:
                    1498     ;       databuff[i]='\0';                                       
                    1499                             ; SOURCE LINE # 339
0096 7400     F     1500             MOV     A,#LOW (databuff?1552)
0098 2F             1501             ADD     A,R7
0099 F582           1502             MOV     DPL,A
009B E4             1503             CLR     A
009C 3400     F     1504             ADDC    A,#HIGH (databuff?1552)
009E F583           1505             MOV     DPH,A
00A0 E4             1506             CLR     A
00A1 F0             1507             MOVX    @DPTR,A
                    1508     ;       strcpy(guchmessagepacket,databuff);     
                    1509                             ; SOURCE LINE # 340
00A2 7800     F     1510             MOV     R0,#LOW (guchmessagepacket)
00A4 7C00     F     1511             MOV     R4,#HIGH (guchmessagepacket)
00A6 7D01           1512             MOV     R5,#01H
00A8 7B01           1513             MOV     R3,#01H
00AA 7A00     F     1514             MOV     R2,#HIGH (databuff?1552)
00AC 7900     F     1515             MOV     R1,#LOW (databuff?1552)
00AE 020000   F     1516             LJMP    ?C?STRCPY
                    1517     ; END OF fnExtractPhoneNoAndMessage
                    1518     
                    1519     ; }
                    1520     ;  
                    1521     ; 
                    1522     ; 
                    1523     ; void  fn_Disable_Echo(void)
                    1524     
----                1525             RSEG  ?PR?fn_Disable_Echo?GSMSIM300
0000                1526     fn_Disable_Echo:
                    1527             USING   0
                    1528                             ; SOURCE LINE # 345
                    1529     ; {
                    1530                             ; SOURCE LINE # 346
                    1531     ;       printf("ATE0");
                    1532                             ; SOURCE LINE # 347
0000 7BFF           1533             MOV     R3,#0FFH
0002 7A00     F     1534             MOV     R2,#HIGH (?SC_151)
0004 7900     F     1535             MOV     R1,#LOW (?SC_151)
A51 MACRO ASSEMBLER  GSMSIM300                                                            11/09/2012 17:30:04 PAGE    25

0006 120000   F     1536             LCALL   _printf
                    1537     ;       fnSendCarriageReturn();
                    1538                             ; SOURCE LINE # 348
0009 020000   F     1539             LJMP    fnSendCarriageReturn
                    1540     ; END OF fn_Disable_Echo
                    1541     
                    1542     ; }
                    1543     ; void fnSendCarriageReturn(void)                                                  
                    1544     
----                1545             RSEG  ?PR?fnSendCarriageReturn?GSMSIM300
0000                1546     fnSendCarriageReturn:
                    1547             USING   0
                    1548                             ; SOURCE LINE # 350
                    1549     ; {      
                    1550                             ; SOURCE LINE # 351
                    1551     ;       char c=0x0d;
                    1552                             ; SOURCE LINE # 352
                    1553     ;---- Variable 'c?1754' assigned to Register 'R7' ----
0000 7F0D           1554             MOV     R7,#0DH
                    1555     ;       printf("%c",c);
                    1556                             ; SOURCE LINE # 353
0002 7BFF           1557             MOV     R3,#0FFH
0004 7A00     F     1558             MOV     R2,#HIGH (?SC_156)
0006 7900     F     1559             MOV     R1,#LOW (?SC_156)
0008 900000   F     1560             MOV     DPTR,#?_printf?BYTE+03H
000B EF             1561             MOV     A,R7
000C F0             1562             MOVX    @DPTR,A
000D 020000   F     1563             LJMP    _printf
                    1564     ; END OF fnSendCarriageReturn
                    1565     
                    1566     ; }
                    1567     ; 
                    1568     ; void fnSendLineFeed(void)
                    1569     
----                1570             RSEG  ?PR?fnSendLineFeed?GSMSIM300
0000                1571     fnSendLineFeed:
                    1572             USING   0
                    1573                             ; SOURCE LINE # 356
                    1574     ; {     char c=0X0A;
                    1575                             ; SOURCE LINE # 357
                    1576     ;---- Variable 'c?1855' assigned to Register 'R7' ----
0000 7F0A           1577             MOV     R7,#0AH
                    1578     ;       printf("%c",c);
                    1579                             ; SOURCE LINE # 358
0002 7BFF           1580             MOV     R3,#0FFH
0004 7A00     F     1581             MOV     R2,#HIGH (?SC_156)
0006 7900     F     1582             MOV     R1,#LOW (?SC_156)
0008 900000   F     1583             MOV     DPTR,#?_printf?BYTE+03H
000B EF             1584             MOV     A,R7
000C F0             1585             MOVX    @DPTR,A
000D 020000   F     1586             LJMP    _printf
                    1587     ; END OF fnSendLineFeed
                    1588     
                    1589     ; }
                    1590     ; 
                    1591     ; void fnSendSUBCtrlZ(void)
                    1592     
----                1593             RSEG  ?PR?fnSendSUBCtrlZ?GSMSIM300
0000                1594     fnSendSUBCtrlZ:
                    1595             USING   0
                    1596                             ; SOURCE LINE # 361
                    1597     ; {   char c= 0x1A;
                    1598                             ; SOURCE LINE # 362
                    1599     ;---- Variable 'c?1956' assigned to Register 'R7' ----
0000 7F1A           1600             MOV     R7,#01AH
                    1601     ;       printf("%c", c);
A51 MACRO ASSEMBLER  GSMSIM300                                                            11/09/2012 17:30:04 PAGE    26

                    1602                             ; SOURCE LINE # 363
0002 7BFF           1603             MOV     R3,#0FFH
0004 7A00     F     1604             MOV     R2,#HIGH (?SC_156)
0006 7900     F     1605             MOV     R1,#LOW (?SC_156)
0008 900000   F     1606             MOV     DPTR,#?_printf?BYTE+03H
000B EF             1607             MOV     A,R7
000C F0             1608             MOVX    @DPTR,A
000D 020000   F     1609             LJMP    _printf
                    1610     ; END OF fnSendSUBCtrlZ
                    1611     
                    1612     ; }
                    1613     ; 
                    1614     ; void fnSendDoubleQuotes(void)
                    1615     
----                1616             RSEG  ?PR?fnSendDoubleQuotes?GSMSIM300
0000                1617     fnSendDoubleQuotes:
                    1618             USING   0
                    1619                             ; SOURCE LINE # 366
                    1620     ; {
                    1621                             ; SOURCE LINE # 367
                    1622     ;     char c= 0x22;
                    1623                             ; SOURCE LINE # 368
                    1624     ;---- Variable 'c?2057' assigned to Register 'R7' ----
0000 7F22           1625             MOV     R7,#022H
                    1626     ;       printf("%c",c);
                    1627                             ; SOURCE LINE # 369
0002 7BFF           1628             MOV     R3,#0FFH
0004 7A00     F     1629             MOV     R2,#HIGH (?SC_156)
0006 7900     F     1630             MOV     R1,#LOW (?SC_156)
0008 900000   F     1631             MOV     DPTR,#?_printf?BYTE+03H
000B EF             1632             MOV     A,R7
000C F0             1633             MOVX    @DPTR,A
000D 020000   F     1634             LJMP    _printf
                    1635     ; END OF fnSendDoubleQuotes
                    1636     
                    1637             END
A51 MACRO ASSEMBLER  GSMSIM300                                                            11/09/2012 17:30:04 PAGE    27

SYMBOL TABLE LISTING
------ ----- -------


N A M E                                    T Y P E  V A L U E   ATTRIBUTES

?C0001. . . . . . . . . . . . . . . . .    C ADDR   000AH   R   SEG=?PR?FN_GSM_SEND_INIT?GSMSIM300
?C0002. . . . . . . . . . . . . . . . .    C ADDR   0027H   R   SEG=?PR?FN_GSM_SEND_INIT?GSMSIM300
?C0006. . . . . . . . . . . . . . . . .    C ADDR   0014H   R   SEG=?PR?FN_GSM_RECIEVE_INIT?GSMSIM300
?C0007. . . . . . . . . . . . . . . . .    C ADDR   001AH   R   SEG=?PR?FN_GSM_RECIEVE_INIT?GSMSIM300
?C0008. . . . . . . . . . . . . . . . .    C ADDR   001AH   R   SEG=?PR?FN_GSM_RECIEVE_INIT?GSMSIM300
?C0010. . . . . . . . . . . . . . . . .    C ADDR   0014H   R   SEG=?PR?FNSETMODEMTORECEIVE?GSMSIM300
?C0011. . . . . . . . . . . . . . . . .    C ADDR   001AH   R   SEG=?PR?FNSETMODEMTORECEIVE?GSMSIM300
?C0012. . . . . . . . . . . . . . . . .    C ADDR   001AH   R   SEG=?PR?FNSETMODEMTORECEIVE?GSMSIM300
?C0015. . . . . . . . . . . . . . . . .    C ADDR   0023H   R   SEG=?PR?FNDELETEINBOXMESSAGES?GSMSIM300
?C0016. . . . . . . . . . . . . . . . .    C ADDR   0029H   R   SEG=?PR?FNDELETEINBOXMESSAGES?GSMSIM300
?C0020. . . . . . . . . . . . . . . . .    C ADDR   0023H   R   SEG=?PR?FNDELETEALLUNSENTMESSAGES?GSMSIM300
?C0021. . . . . . . . . . . . . . . . .    C ADDR   0029H   R   SEG=?PR?FNDELETEALLUNSENTMESSAGES?GSMSIM300
?C0022. . . . . . . . . . . . . . . . .    C ADDR   0029H   R   SEG=?PR?FNDELETEALLUNSENTMESSAGES?GSMSIM300
?C0023. . . . . . . . . . . . . . . . .    C ADDR   0023H   R   SEG=?PR?FNDELETEALLRECEIVEDMESSAGES?GSMSIM300
?C0024. . . . . . . . . . . . . . . . .    C ADDR   0029H   R   SEG=?PR?FNDELETEALLRECEIVEDMESSAGES?GSMSIM300
?C0025. . . . . . . . . . . . . . . . .    C ADDR   0029H   R   SEG=?PR?FNDELETEALLRECEIVEDMESSAGES?GSMSIM300
?C0026. . . . . . . . . . . . . . . . .    C ADDR   0019H   R   SEG=?PR?CHFNGSMNETWORKREADYCHECK?GSMSIM300
?C0027. . . . . . . . . . . . . . . . .    C ADDR   001FH   R   SEG=?PR?CHFNGSMNETWORKREADYCHECK?GSMSIM300
?C0028. . . . . . . . . . . . . . . . .    C ADDR   0025H   R   SEG=?PR?CHFNGSMNETWORKREADYCHECK?GSMSIM300
?C0029. . . . . . . . . . . . . . . . .    C ADDR   0044H   R   SEG=?PR?CHFNGSMNETWORKREADYCHECK?GSMSIM300
?C0030. . . . . . . . . . . . . . . . .    C ADDR   0072H   R   SEG=?PR?CHFNGSMNETWORKREADYCHECK?GSMSIM300
?C0031. . . . . . . . . . . . . . . . .    C ADDR   0074H   R   SEG=?PR?CHFNGSMNETWORKREADYCHECK?GSMSIM300
?C0032. . . . . . . . . . . . . . . . .    C ADDR   0016H   R   SEG=?PR?UCHFNCHECKINBOXSTATUS?GSMSIM300
?C0033. . . . . . . . . . . . . . . . .    C ADDR   0025H   R   SEG=?PR?UCHFNCHECKINBOXSTATUS?GSMSIM300
?C0035. . . . . . . . . . . . . . . . .    C ADDR   002EH   R   SEG=?PR?UCHFNCHECKINBOXSTATUS?GSMSIM300
?C0037. . . . . . . . . . . . . . . . .    C ADDR   0031H   R   SEG=?PR?UCHFNCHECKINBOXSTATUS?GSMSIM300
?C0038. . . . . . . . . . . . . . . . .    C ADDR   0034H   R   SEG=?PR?UCHFNCHECKINBOXSTATUS?GSMSIM300
?C0039. . . . . . . . . . . . . . . . .    C ADDR   0009H   R   SEG=?PR?UCHFNCHECKFIRSTMESSAGESTATUS?GSMSIM300
?C0040. . . . . . . . . . . . . . . . .    C ADDR   0026H   R   SEG=?PR?UCHFNCHECKFIRSTMESSAGESTATUS?GSMSIM300
?C0041. . . . . . . . . . . . . . . . .    C ADDR   002BH   R   SEG=?PR?UCHFNCHECKFIRSTMESSAGESTATUS?GSMSIM300
?C0042. . . . . . . . . . . . . . . . .    C ADDR   0048H   R   SEG=?PR?UCHFNCHECKFIRSTMESSAGESTATUS?GSMSIM300
?C0043. . . . . . . . . . . . . . . . .    C ADDR   0077H   R   SEG=?PR?UCHFNCHECKFIRSTMESSAGESTATUS?GSMSIM300
?C0044. . . . . . . . . . . . . . . . .    C ADDR   0098H   R   SEG=?PR?UCHFNCHECKFIRSTMESSAGESTATUS?GSMSIM300
?C0045. . . . . . . . . . . . . . . . .    C ADDR   0096H   R   SEG=?PR?UCHFNCHECKFIRSTMESSAGESTATUS?GSMSIM300
?C0047. . . . . . . . . . . . . . . . .    C ADDR   0002H   R   SEG=?PR?FNEXTRACTPHONENOANDMESSAGE?GSMSIM300
?C0048. . . . . . . . . . . . . . . . .    C ADDR   0014H   R   SEG=?PR?FNEXTRACTPHONENOANDMESSAGE?GSMSIM300
?C0049. . . . . . . . . . . . . . . . .    C ADDR   001BH   R   SEG=?PR?FNEXTRACTPHONENOANDMESSAGE?GSMSIM300
?C0050. . . . . . . . . . . . . . . . .    C ADDR   003CH   R   SEG=?PR?FNEXTRACTPHONENOANDMESSAGE?GSMSIM300
?C0052. . . . . . . . . . . . . . . . .    C ADDR   0059H   R   SEG=?PR?FNEXTRACTPHONENOANDMESSAGE?GSMSIM300
?C0053. . . . . . . . . . . . . . . . .    C ADDR   006BH   R   SEG=?PR?FNEXTRACTPHONENOANDMESSAGE?GSMSIM300
?C0054. . . . . . . . . . . . . . . . .    C ADDR   0073H   R   SEG=?PR?FNEXTRACTPHONENOANDMESSAGE?GSMSIM300
?C0055. . . . . . . . . . . . . . . . .    C ADDR   0096H   R   SEG=?PR?FNEXTRACTPHONENOANDMESSAGE?GSMSIM300
?C0062. . . . . . . . . . . . . . . . .    C ADDR   003EH   R   SEG=?PR?CHFNGSMNETWORKREADYCHECK?GSMSIM300
?C0063. . . . . . . . . . . . . . . . .    C ADDR   0020H   R   SEG=?PR?UCHFNCHECKINBOXSTATUS?GSMSIM300
?C0064. . . . . . . . . . . . . . . . .    C ADDR   0033H   R   SEG=?PR?UCHFNCHECKFIRSTMESSAGESTATUS?GSMSIM300
?C?STRCPY . . . . . . . . . . . . . . .    C ADDR   -----       EXT
?CHFNGSMNETWORKREADYCHECK?BYTE. . . . .    X ADDR   0000H   R   SEG=?XD?CHFNGSMNETWORKREADYCHECK?GSMSIM300
?CO?GSMSIM300 . . . . . . . . . . . . .    C SEG    009FH       REL=UNIT
?FNEXTRACTPHONENOANDMESSAGE?BYTE. . . .    X ADDR   0000H   R   SEG=?XD?FNEXTRACTPHONENOANDMESSAGE?GSMSIM300
?FN_GSM_SEND_INIT?BYTE. . . . . . . . .    X ADDR   0000H   R   SEG=?XD?FN_GSM_SEND_INIT?GSMSIM300
?PR?CHFNGSMNETWORKREADYCHECK?GSMSIM300.    C SEG    0075H       REL=UNIT
?PR?FNDELETEALLMESSAGES?GSMSIM300 . . .    C SEG    0023H       REL=UNIT
?PR?FNDELETEALLRECEIVEDMESSAGES?GSMSIM300  C SEG    002AH       REL=UNIT
?PR?FNDELETEALLSENTMESSAGES?GSMSIM300 .    C SEG    0023H       REL=UNIT
?PR?FNDELETEALLUNREADMESSAGES?GSMSIM300    C SEG    0023H       REL=UNIT
?PR?FNDELETEALLUNSENTMESSAGES?GSMSIM300    C SEG    002AH       REL=UNIT
?PR?FNDELETEINBOXMESSAGES?GSMSIM300 . .    C SEG    002EH       REL=UNIT
?PR?FNEXTRACTPHONENOANDMESSAGE?GSMSIM300   C SEG    00B1H       REL=UNIT
?PR?FNSENDCARRIAGERETURN?GSMSIM300. . .    C SEG    0010H       REL=UNIT
?PR?FNSENDDOUBLEQUOTES?GSMSIM300. . . .    C SEG    0010H       REL=UNIT
A51 MACRO ASSEMBLER  GSMSIM300                                                            11/09/2012 17:30:04 PAGE    28

?PR?FNSENDLINEFEED?GSMSIM300. . . . . .    C SEG    0010H       REL=UNIT
?PR?FNSENDSUBCTRLZ?GSMSIM300. . . . . .    C SEG    0010H       REL=UNIT
?PR?FNSETMODEMTORECEIVE?GSMSIM300 . . .    C SEG    001BH       REL=UNIT
?PR?FN_DISABLE_ECHO?GSMSIM300 . . . . .    C SEG    000CH       REL=UNIT
?PR?FN_GSM_RECIEVE_INIT?GSMSIM300 . . .    C SEG    001BH       REL=UNIT
?PR?FN_GSM_SEND_INIT?GSMSIM300. . . . .    C SEG    004FH       REL=UNIT
?PR?FN_GSM_SEND_RECIEVE_INIT?GSMSIM300.    C SEG    000BH       REL=UNIT
?PR?UCHFNCHECKFIRSTMESSAGESTATUS?GSMSIM300 C SEG    0099H       REL=UNIT
?PR?UCHFNCHECKINBOXSTATUS?GSMSIM300 . .    C SEG    0037H       REL=UNIT
?PR?_FNDELETEMESSAGEINDEX?GSMSIM300 . .    C SEG    002AH       REL=UNIT
?PR?_FNGSMSENDMESSAGE?GSMSIM300 . . . .    C SEG    006FH       REL=UNIT
?SC_0 . . . . . . . . . . . . . . . . .    C ADDR   0000H   R   SEG=?CO?GSMSIM300
?SC_103 . . . . . . . . . . . . . . . .    C ADDR   0067H   R   SEG=?CO?GSMSIM300
?SC_114 . . . . . . . . . . . . . . . .    C ADDR   0072H   R   SEG=?CO?GSMSIM300
?SC_123 . . . . . . . . . . . . . . . .    C ADDR   007BH   R   SEG=?CO?GSMSIM300
?SC_129 . . . . . . . . . . . . . . . .    C ADDR   0081H   R   SEG=?CO?GSMSIM300
?SC_13. . . . . . . . . . . . . . . . .    C ADDR   000DH   R   SEG=?CO?GSMSIM300
?SC_139 . . . . . . . . . . . . . . . .    C ADDR   008BH   R   SEG=?CO?GSMSIM300
?SC_146 . . . . . . . . . . . . . . . .    C ADDR   0092H   R   SEG=?CO?GSMSIM300
?SC_151 . . . . . . . . . . . . . . . .    C ADDR   0097H   R   SEG=?CO?GSMSIM300
?SC_156 . . . . . . . . . . . . . . . .    C ADDR   009CH   R   SEG=?CO?GSMSIM300
?SC_22. . . . . . . . . . . . . . . . .    C ADDR   0016H   R   SEG=?CO?GSMSIM300
?SC_25. . . . . . . . . . . . . . . . .    C ADDR   0019H   R   SEG=?CO?GSMSIM300
?SC_3 . . . . . . . . . . . . . . . . .    C ADDR   0003H   R   SEG=?CO?GSMSIM300
?SC_43. . . . . . . . . . . . . . . . .    C ADDR   002BH   R   SEG=?CO?GSMSIM300
?SC_52. . . . . . . . . . . . . . . . .    C ADDR   0034H   R   SEG=?CO?GSMSIM300
?SC_55. . . . . . . . . . . . . . . . .    C ADDR   0037H   R   SEG=?CO?GSMSIM300
?SC_65. . . . . . . . . . . . . . . . .    C ADDR   0041H   R   SEG=?CO?GSMSIM300
?SC_73. . . . . . . . . . . . . . . . .    C ADDR   0049H   R   SEG=?CO?GSMSIM300
?SC_83. . . . . . . . . . . . . . . . .    C ADDR   0053H   R   SEG=?CO?GSMSIM300
?SC_94. . . . . . . . . . . . . . . . .    C ADDR   005EH   R   SEG=?CO?GSMSIM300
?UCHFNCHECKFIRSTMESSAGESTATUS?BYTE. . .    X ADDR   0000H   R   SEG=?XD?UCHFNCHECKFIRSTMESSAGESTATUS?GSMSIM300
?XD?CHFNGSMNETWORKREADYCHECK?GSMSIM300.    X SEG    0010H       REL=UNIT
?XD?FNEXTRACTPHONENOANDMESSAGE?GSMSIM300   X SEG    0015H       REL=UNIT
?XD?FN_GSM_SEND_INIT?GSMSIM300. . . . .    X SEG    0001H       REL=UNIT
?XD?GSMSIM300 . . . . . . . . . . . . .    X SEG    012CH       REL=UNIT
?XD?UCHFNCHECKFIRSTMESSAGESTATUS?GSMSIM300 X SEG    0001H       REL=UNIT
?XD?_FNDELETEMESSAGEINDEX?GSMSIM300 . .    X SEG    0001H       REL=UNIT
?XD?_FNGSMSENDMESSAGE?GSMSIM300 . . . .    X SEG    0006H       REL=UNIT
?_FNDELETEMESSAGEINDEX?BYTE . . . . . .    X ADDR   0000H   R   SEG=?XD?_FNDELETEMESSAGEINDEX?GSMSIM300
?_FNGSMSENDMESSAGE?BYTE . . . . . . . .    X ADDR   0000H   R   SEG=?XD?_FNGSMSENDMESSAGE?GSMSIM300
?_PRINTF?BYTE . . . . . . . . . . . . .    X ADDR   -----       EXT
?_STRSTR?BYTE . . . . . . . . . . . . .    X ADDR   -----       EXT
AC. . . . . . . . . . . . . . . . . . .    B ADDR   00D0H.6 A   
ACC . . . . . . . . . . . . . . . . . .    D ADDR   00E0H   A   
B . . . . . . . . . . . . . . . . . . .    D ADDR   00F0H   A   
BUZZER_PIN. . . . . . . . . . . . . . .    B ADDR   0080H.0 A   
CHFNGSMNETWORKREADYCHECK. . . . . . . .    C ADDR   0000H   R   SEG=?PR?CHFNGSMNETWORKREADYCHECK?GSMSIM300
CP_RL2. . . . . . . . . . . . . . . . .    B ADDR   00C8H.0 A   
CY. . . . . . . . . . . . . . . . . . .    B ADDR   00D0H.7 A   
C_T2. . . . . . . . . . . . . . . . . .    B ADDR   00C8H.1 A   
DATABUFF?1552 . . . . . . . . . . . . .    X ADDR   0000H   R   SEG=?XD?FNEXTRACTPHONENOANDMESSAGE?GSMSIM300
DISPLAYBUFFER . . . . . . . . . . . . .    X ADDR   00D7H   R   SEG=?XD?GSMSIM300
DPH . . . . . . . . . . . . . . . . . .    D ADDR   0083H   A   
DPL . . . . . . . . . . . . . . . . . .    D ADDR   0082H   A   
EA. . . . . . . . . . . . . . . . . . .    B ADDR   00A8H.7 A   
EM_LOCK_ENABE_BUTTON. . . . . . . . . .    B ADDR   0080H.2 A   
EM_LOCK_PIN . . . . . . . . . . . . . .    B ADDR   0080H.3 A   
ENABLE_LCD. . . . . . . . . . . . . . .    B ADDR   0090H.3 A   
ES. . . . . . . . . . . . . . . . . . .    B ADDR   00A8H.4 A   
ET0 . . . . . . . . . . . . . . . . . .    B ADDR   00A8H.1 A   
ET1 . . . . . . . . . . . . . . . . . .    B ADDR   00A8H.3 A   
ET2 . . . . . . . . . . . . . . . . . .    B ADDR   00A8H.5 A   
EX0 . . . . . . . . . . . . . . . . . .    B ADDR   00A8H.0 A   
EX1 . . . . . . . . . . . . . . . . . .    B ADDR   00A8H.2 A   
EXEN2 . . . . . . . . . . . . . . . . .    B ADDR   00C8H.3 A   
A51 MACRO ASSEMBLER  GSMSIM300                                                            11/09/2012 17:30:04 PAGE    29

EXF2. . . . . . . . . . . . . . . . . .    B ADDR   00C8H.6 A   
F0. . . . . . . . . . . . . . . . . . .    B ADDR   00D0H.5 A   
FNDELETEALLMESSAGES . . . . . . . . . .    C ADDR   0000H   R   SEG=?PR?FNDELETEALLMESSAGES?GSMSIM300
FNDELETEALLRECEIVEDMESSAGES . . . . . .    C ADDR   0000H   R   SEG=?PR?FNDELETEALLRECEIVEDMESSAGES?GSMSIM300
FNDELETEALLSENTMESSAGES . . . . . . . .    C ADDR   0000H   R   SEG=?PR?FNDELETEALLSENTMESSAGES?GSMSIM300
FNDELETEALLUNREADMESSAGES . . . . . . .    C ADDR   0000H   R   SEG=?PR?FNDELETEALLUNREADMESSAGES?GSMSIM300
FNDELETEALLUNSENTMESSAGES . . . . . . .    C ADDR   0000H   R   SEG=?PR?FNDELETEALLUNSENTMESSAGES?GSMSIM300
FNDELETEINBOXMESSAGES . . . . . . . . .    C ADDR   0000H   R   SEG=?PR?FNDELETEINBOXMESSAGES?GSMSIM300
FNEXTRACTPHONENOANDMESSAGE. . . . . . .    C ADDR   0000H   R   SEG=?PR?FNEXTRACTPHONENOANDMESSAGE?GSMSIM300
FNSENDCARRIAGERETURN. . . . . . . . . .    C ADDR   0000H   R   SEG=?PR?FNSENDCARRIAGERETURN?GSMSIM300
FNSENDDOUBLEQUOTES. . . . . . . . . . .    C ADDR   0000H   R   SEG=?PR?FNSENDDOUBLEQUOTES?GSMSIM300
FNSENDLINEFEED. . . . . . . . . . . . .    C ADDR   0000H   R   SEG=?PR?FNSENDLINEFEED?GSMSIM300
FNSENDSUBCTRLZ. . . . . . . . . . . . .    C ADDR   0000H   R   SEG=?PR?FNSENDSUBCTRLZ?GSMSIM300
FNSETMODEMTORECEIVE . . . . . . . . . .    C ADDR   0000H   R   SEG=?PR?FNSETMODEMTORECEIVE?GSMSIM300
FN_DISABLE_ECHO . . . . . . . . . . . .    C ADDR   0000H   R   SEG=?PR?FN_DISABLE_ECHO?GSMSIM300
FN_GSM_RECIEVE_INIT . . . . . . . . . .    C ADDR   0000H   R   SEG=?PR?FN_GSM_RECIEVE_INIT?GSMSIM300
FN_GSM_SEND_INIT. . . . . . . . . . . .    C ADDR   0000H   R   SEG=?PR?FN_GSM_SEND_INIT?GSMSIM300
FN_GSM_SEND_RECIEVE_INIT. . . . . . . .    C ADDR   0000H   R   SEG=?PR?FN_GSM_SEND_RECIEVE_INIT?GSMSIM300
FN_RECEIVE_SERIAL . . . . . . . . . . .    C ADDR   -----       EXT
GSMSIM300 . . . . . . . . . . . . . . .    N NUMB   -----       
GUCHCOMPLETEGSMDATAPACKET . . . . . . .    X ADDR   0028H   R   SEG=?XD?GSMSIM300
GUCHCOMPLETEGSMDATAPACKET?142 . . . . .    X ADDR   0003H   R   SEG=?XD?_FNGSMSENDMESSAGE?GSMSIM300
GUCHGSMPHONENUMBER. . . . . . . . . . .    X ADDR   011DH   R   SEG=?XD?GSMSIM300
GUCHGSMPHONENUMBER?141. . . . . . . . .    X ADDR   0000H   R   SEG=?XD?_FNGSMSENDMESSAGE?GSMSIM300
GUCHMESSAGEPACKET . . . . . . . . . . .    X ADDR   0000H   R   SEG=?XD?GSMSIM300
GUCHPHONENUMBERPACKET . . . . . . . . .    X ADDR   00C8H   R   SEG=?XD?GSMSIM300
I?040 . . . . . . . . . . . . . . . . .    X ADDR   0000H   R   SEG=?XD?FN_GSM_SEND_INIT?GSMSIM300
I?1449. . . . . . . . . . . . . . . . .    X ADDR   0000H   R   SEG=?XD?UCHFNCHECKFIRSTMESSAGESTATUS?GSMSIM300
IE. . . . . . . . . . . . . . . . . . .    D ADDR   00A8H   A   
IE0 . . . . . . . . . . . . . . . . . .    B ADDR   0088H.1 A   
IE1 . . . . . . . . . . . . . . . . . .    B ADDR   0088H.3 A   
INDEX?1553. . . . . . . . . . . . . . .    X ADDR   0014H   R   SEG=?XD?FNEXTRACTPHONENOANDMESSAGE?GSMSIM300
INDEX?543 . . . . . . . . . . . . . . .    X ADDR   0000H   R   SEG=?XD?_FNDELETEMESSAGEINDEX?GSMSIM300
INT0. . . . . . . . . . . . . . . . . .    B ADDR   00B0H.2 A   
INT1. . . . . . . . . . . . . . . . . .    B ADDR   00B0H.3 A   
IP. . . . . . . . . . . . . . . . . . .    D ADDR   00B8H   A   
IT0 . . . . . . . . . . . . . . . . . .    B ADDR   0088H.0 A   
IT1 . . . . . . . . . . . . . . . . . .    B ADDR   0088H.2 A   
KEYBOARD_KEY_1. . . . . . . . . . . . .    B ADDR   00A0H.0 A   
KEYBOARD_KEY_10 . . . . . . . . . . . .    B ADDR   0080H.6 A   
KEYBOARD_KEY_11 . . . . . . . . . . . .    B ADDR   0080H.5 A   
KEYBOARD_KEY_12 . . . . . . . . . . . .    B ADDR   0080H.4 A   
KEYBOARD_KEY_2. . . . . . . . . . . . .    B ADDR   00A0H.1 A   
KEYBOARD_KEY_3. . . . . . . . . . . . .    B ADDR   00A0H.2 A   
KEYBOARD_KEY_4. . . . . . . . . . . . .    B ADDR   00A0H.3 A   
KEYBOARD_KEY_5. . . . . . . . . . . . .    B ADDR   00A0H.4 A   
KEYBOARD_KEY_6. . . . . . . . . . . . .    B ADDR   00A0H.5 A   
KEYBOARD_KEY_7. . . . . . . . . . . . .    B ADDR   00A0H.6 A   
KEYBOARD_KEY_8. . . . . . . . . . . . .    B ADDR   00A0H.7 A   
KEYBOARD_KEY_9. . . . . . . . . . . . .    B ADDR   0080H.7 A   
LCD_D4_LSB. . . . . . . . . . . . . . .    B ADDR   0090H.4 A   
LCD_D5. . . . . . . . . . . . . . . . .    B ADDR   0090H.5 A   
LCD_D6. . . . . . . . . . . . . . . . .    B ADDR   0090H.6 A   
LCD_D7_MSB. . . . . . . . . . . . . . .    B ADDR   0090H.7 A   
MODULESELECT0 . . . . . . . . . . . . .    B ADDR   00B0H.7 A   
MODULESELECT1 . . . . . . . . . . . . .    B ADDR   00B0H.6 A   
OV. . . . . . . . . . . . . . . . . . .    B ADDR   00D0H.2 A   
P . . . . . . . . . . . . . . . . . . .    B ADDR   00D0H.0 A   
P0. . . . . . . . . . . . . . . . . . .    D ADDR   0080H   A   
P1. . . . . . . . . . . . . . . . . . .    D ADDR   0090H   A   
P2. . . . . . . . . . . . . . . . . . .    D ADDR   00A0H   A   
P3. . . . . . . . . . . . . . . . . . .    D ADDR   00B0H   A   
PCON. . . . . . . . . . . . . . . . . .    D ADDR   0087H   A   
PS. . . . . . . . . . . . . . . . . . .    B ADDR   00B8H.4 A   
PSW . . . . . . . . . . . . . . . . . .    D ADDR   00D0H   A   
PT0 . . . . . . . . . . . . . . . . . .    B ADDR   00B8H.1 A   
A51 MACRO ASSEMBLER  GSMSIM300                                                            11/09/2012 17:30:04 PAGE    30

PT1 . . . . . . . . . . . . . . . . . .    B ADDR   00B8H.3 A   
PT2 . . . . . . . . . . . . . . . . . .    B ADDR   00B8H.5 A   
PX0 . . . . . . . . . . . . . . . . . .    B ADDR   00B8H.0 A   
PX1 . . . . . . . . . . . . . . . . . .    B ADDR   00B8H.2 A   
RB8 . . . . . . . . . . . . . . . . . .    B ADDR   0098H.2 A   
RCAP2H. . . . . . . . . . . . . . . . .    D ADDR   00CBH   A   
RCAP2L. . . . . . . . . . . . . . . . .    D ADDR   00CAH   A   
RCLK. . . . . . . . . . . . . . . . . .    B ADDR   00C8H.5 A   
RD. . . . . . . . . . . . . . . . . . .    B ADDR   00B0H.7 A   
REN . . . . . . . . . . . . . . . . . .    B ADDR   0098H.4 A   
RI. . . . . . . . . . . . . . . . . . .    B ADDR   0098H.0 A   
RS0 . . . . . . . . . . . . . . . . . .    B ADDR   00D0H.3 A   
RS1 . . . . . . . . . . . . . . . . . .    B ADDR   00D0H.4 A   
RS_LCD. . . . . . . . . . . . . . . . .    B ADDR   0090H.2 A   
RXD . . . . . . . . . . . . . . . . . .    B ADDR   00B0H.0 A   
SBUF. . . . . . . . . . . . . . . . . .    D ADDR   0099H   A   
SCON. . . . . . . . . . . . . . . . . .    D ADDR   0098H   A   
SM0 . . . . . . . . . . . . . . . . . .    B ADDR   0098H.7 A   
SM1 . . . . . . . . . . . . . . . . . .    B ADDR   0098H.6 A   
SM2 . . . . . . . . . . . . . . . . . .    B ADDR   0098H.5 A   
SP. . . . . . . . . . . . . . . . . . .    D ADDR   0081H   A   
T0. . . . . . . . . . . . . . . . . . .    B ADDR   00B0H.4 A   
T1. . . . . . . . . . . . . . . . . . .    B ADDR   00B0H.5 A   
T2. . . . . . . . . . . . . . . . . . .    B ADDR   0090H.0 A   
T2CON . . . . . . . . . . . . . . . . .    D ADDR   00C8H   A   
T2EX. . . . . . . . . . . . . . . . . .    B ADDR   0090H.1 A   
TB8 . . . . . . . . . . . . . . . . . .    B ADDR   0098H.3 A   
TCLK. . . . . . . . . . . . . . . . . .    B ADDR   00C8H.4 A   
TCON. . . . . . . . . . . . . . . . . .    D ADDR   0088H   A   
TF0 . . . . . . . . . . . . . . . . . .    B ADDR   0088H.5 A   
TF1 . . . . . . . . . . . . . . . . . .    B ADDR   0088H.7 A   
TF2 . . . . . . . . . . . . . . . . . .    B ADDR   00C8H.7 A   
TH0 . . . . . . . . . . . . . . . . . .    D ADDR   008CH   A   
TH1 . . . . . . . . . . . . . . . . . .    D ADDR   008DH   A   
TH2 . . . . . . . . . . . . . . . . . .    D ADDR   00CDH   A   
TI. . . . . . . . . . . . . . . . . . .    B ADDR   0098H.1 A   
TL0 . . . . . . . . . . . . . . . . . .    D ADDR   008AH   A   
TL1 . . . . . . . . . . . . . . . . . .    D ADDR   008BH   A   
TL2 . . . . . . . . . . . . . . . . . .    D ADDR   00CCH   A   
TMOD. . . . . . . . . . . . . . . . . .    D ADDR   0089H   A   
TR0 . . . . . . . . . . . . . . . . . .    B ADDR   0088H.4 A   
TR1 . . . . . . . . . . . . . . . . . .    B ADDR   0088H.6 A   
TR2 . . . . . . . . . . . . . . . . . .    B ADDR   00C8H.2 A   
TXD . . . . . . . . . . . . . . . . . .    B ADDR   00B0H.1 A   
UCHCOUNT?1245 . . . . . . . . . . . . .    X ADDR   000FH   R   SEG=?XD?CHFNGSMNETWORKREADYCHECK?GSMSIM300
UCHFNCHECKFIRSTMESSAGESTATUS. . . . . .    C ADDR   0000H   R   SEG=?PR?UCHFNCHECKFIRSTMESSAGESTATUS?GSMSIM300
UCHFNCHECKINBOXSTATUS . . . . . . . . .    C ADDR   0000H   R   SEG=?PR?UCHFNCHECKINBOXSTATUS?GSMSIM300
UCHRESPONSEFROMGSM?1244 . . . . . . . .    X ADDR   0000H   R   SEG=?XD?CHFNGSMNETWORKREADYCHECK?GSMSIM300
WR. . . . . . . . . . . . . . . . . . .    B ADDR   00B0H.6 A   
_DELAY_IN_MS. . . . . . . . . . . . . .    C ADDR   -----       EXT
_DELAY_IN_SECONDS . . . . . . . . . . .    C ADDR   -----       EXT
_DELAY_MS . . . . . . . . . . . . . . .    C ADDR   -----       EXT
_FNDELETEMESSAGEINDEX . . . . . . . . .    C ADDR   0000H   R   SEG=?PR?_FNDELETEMESSAGEINDEX?GSMSIM300
_FNGSMSENDMESSAGE . . . . . . . . . . .    C ADDR   0000H   R   SEG=?PR?_FNGSMSENDMESSAGE?GSMSIM300
_FNMODULESELECT . . . . . . . . . . . .    C ADDR   -----       EXT
_PRINTF . . . . . . . . . . . . . . . .    C ADDR   -----       EXT
_STRSTR . . . . . . . . . . . . . . . .    C ADDR   -----       EXT


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S)
