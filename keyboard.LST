C51 COMPILER V9.02   KEYBOARD                                                              04/01/2013 22:01:20 PAGE 1   


C51 COMPILER V9.02, COMPILATION OF MODULE KEYBOARD
OBJECT MODULE PLACED IN keyboard.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE keyboard.c LARGE BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /*
   2                          File name                               :       keyboard.c
   3                          Discription                             :       12x1 keyboard
   4                          Date of creation                :       4-11-2011
   5                          Author                                  :       Arjun Singh
   6                          Code last update on             :
   7                          Code last updated by    :       Arjun Singh
   8          
   9          */
  10          
  11          
  12          
  13          #include <reg51.h>
  14          #include <stdio.h>
  15          #include <string.h>
  16          #include <stdlib.h>
  17          #include "keyboard.h"
  18          #include "delay.h"
  19          #include "pinallocation.h"
  20          #include "ProjectMain.h"
  21          #include "LCD.h"
  22          
  23          
  24          unsigned char   Keypad[12]=     {'1','2','3','4','5','6','7','8','9','*','0','#'};
  25          unsigned char  Keyboard_key_no;
  26          unsigned char password_length ;
  27          //char string_passwd[]={123456};
  28          unsigned char key_pressed[7];
  29          
  30          unsigned char length ;
  31          //int passwordvalue;
  32          //unsigned char key_pressed[6];
  33          //unsigned char pointer_key_pressed[];
  34          
  35          
  36          
  37          
  38          
  39          void fn_keyboard_12x1for_password(unsigned char password_length)
  40          {
  41   1                      fn_lcd_select_line_and_location(LCD_LINE_1,LOCATION_0);
  42   1                      fn_Display_String_LCD("                 ");
  43   1                      fn_lcd_select_line_and_location(LCD_LINE_2,LOCATION_0);
  44   1                      fn_Display_String_LCD("                 ");
  45   1                      fnModuleSelect(SELECT_PC_ON_UART);
  46   1                      //delay_in_seconds(1);
  47   1          
  48   1              for(length=0;length<password_length;length++)
  49   1              {
  50   2                      fn_lcd_select_line_and_location(LCD_LINE_1,LOCATION_0);
  51   2                      fn_Display_String_LCD(" Enter password");
  52   2                      chfn_keyboard_12x1();
  53   2                  key_pressed[length]= Keyboard_key_no;
  54   2                      delay_in_ms(500);
  55   2                      fn_lcd_select_line_and_location(LCD_LINE_2,length);
C51 COMPILER V9.02   KEYBOARD                                                              04/01/2013 22:01:20 PAGE 2   

  56   2                      fn_Display_String_LCD("*");
  57   2                      printf("\nkey pressed is= %C\n",key_pressed)     ;
  58   2      
  59   2              }
  60   1      //      length=length+1         ;
  61   1              key_pressed[length]= '\0';
  62   1              
  63   1      //      passwordvalue=strcmp(string_passwd,key_pressed);
  64   1      //      if(passwordvalue==0)
  65   1      //      {
  66   1      //              printf("password matched");
  67   1      //              EM_lock_pin=LOCKENABLED;
  68   1      //              fn_lcd_select_line_and_location(LCD_LINE_2,LOCATION_0);
  69   1      //              fn_Display_String_LCD("Password matched");
  70   1      //
  71   1      //      }
  72   1      //      else
  73   1      //      {
  74   1      //              Buzzer_pin=BUZZERENABLED;
  75   1      //              fn_lcd_select_line_and_location(LCD_LINE_2,LOCATION_0);
  76   1      //              fn_Display_String_LCD(" Wrong password ");
  77   1      //              printf("Wrong password");
  78   1      //      }
  79   1                      
  80   1                      
  81   1      }
  82          
  83          
  84          
  85          
  86          
  87          void chfn_keyboard_12x1(void)
  88          {
  89   1              unsigned char i;
  90   1              Keyboard_key_9=1;
  91   1              Keyboard_key_10=1;
  92   1              Keyboard_key_11=1;
  93   1              Keyboard_key_12=1;
  94   1              P2=0xff ;
  95   1              i=((P2==0xff)&&Keyboard_key_9==1&& Keyboard_key_10==1&&Keyboard_key_11==1&&Keyboard_key_12==1 );
  96   1              while(i!=0)
  97   1              {
  98   2              i=((P2==0xff)&&Keyboard_key_9==1&& Keyboard_key_10==1&&Keyboard_key_11==1&&Keyboard_key_12==1 );
  99   2              }
 100   1              
 101   1              if(Keyboard_key_1==KEYBOARD_KEY_PRESSED)
 102   1                      {
 103   2                      delay_in_ms(100);
 104   2                      if(Keyboard_key_1==KEYBOARD_KEY_PRESSED)
 105   2                      Keyboard_key_no=Keypad[0];
 106   2                      printf("%C",Keyboard_key_no);
 107   2      //              break;
 108   2                      }
 109   1              if(Keyboard_key_2==KEYBOARD_KEY_PRESSED)
 110   1                      {
 111   2                      delay_in_ms(100);
 112   2                      if(Keyboard_key_2==KEYBOARD_KEY_PRESSED)
 113   2                      Keyboard_key_no=Keypad[1];
 114   2                      printf("%C",Keyboard_key_no);
 115   2      //              break;
 116   2                      }
 117   1              if(Keyboard_key_3==KEYBOARD_KEY_PRESSED)
C51 COMPILER V9.02   KEYBOARD                                                              04/01/2013 22:01:20 PAGE 3   

 118   1                      {
 119   2                      delay_in_ms(100);
 120   2                      if(Keyboard_key_3==KEYBOARD_KEY_PRESSED)
 121   2                      Keyboard_key_no=Keypad[2];
 122   2                      printf("%C",Keyboard_key_no);
 123   2      //              break;
 124   2                      }
 125   1              if(Keyboard_key_4==KEYBOARD_KEY_PRESSED)
 126   1                      {
 127   2                      delay_in_ms(100);
 128   2                      if(Keyboard_key_4==KEYBOARD_KEY_PRESSED)
 129   2                      Keyboard_key_no=Keypad[3];
 130   2                      printf("%C",Keyboard_key_no);
 131   2      //              break;
 132   2                      }
 133   1              if(Keyboard_key_5==KEYBOARD_KEY_PRESSED)
 134   1                      {
 135   2                      delay_in_ms(100);
 136   2                      if(Keyboard_key_5==KEYBOARD_KEY_PRESSED)
 137   2                      Keyboard_key_no=Keypad[4];
 138   2                      printf("%C",Keyboard_key_no);
 139   2      //              break;
 140   2                      }
 141   1              if(Keyboard_key_6==KEYBOARD_KEY_PRESSED)
 142   1                      {
 143   2                      delay_in_ms(100);
 144   2                      if(Keyboard_key_6==KEYBOARD_KEY_PRESSED)
 145   2                      Keyboard_key_no=Keypad[5];
 146   2                      printf("%C",Keyboard_key_no);
 147   2      //              break;
 148   2                      }
 149   1              if(Keyboard_key_7==KEYBOARD_KEY_PRESSED)
 150   1                      {
 151   2                      delay_in_ms(100);
 152   2                      if(Keyboard_key_7==KEYBOARD_KEY_PRESSED)
 153   2                      Keyboard_key_no=Keypad[6];
 154   2                      printf("%C",Keyboard_key_no);
 155   2      //              break;
 156   2                      }
 157   1              if(Keyboard_key_8==KEYBOARD_KEY_PRESSED)
 158   1                      {
 159   2                      delay_in_ms(100);
 160   2                      if(Keyboard_key_8==KEYBOARD_KEY_PRESSED)
 161   2                      Keyboard_key_no=Keypad[7];
 162   2                      printf("%C",Keyboard_key_no);
 163   2      //              break;
 164   2                      }
 165   1              if(Keyboard_key_9==KEYBOARD_KEY_PRESSED)
 166   1                      {
 167   2                      delay_in_ms(100);
 168   2                      if(Keyboard_key_9==KEYBOARD_KEY_PRESSED)
 169   2                      Keyboard_key_no=Keypad[8];
 170   2                      printf("%C",Keyboard_key_no);
 171   2      //              break;
 172   2                      }
 173   1              if(Keyboard_key_10==KEYBOARD_KEY_PRESSED)
 174   1                      {
 175   2                      delay_in_ms(100);
 176   2                      if(Keyboard_key_10==KEYBOARD_KEY_PRESSED)
 177   2                      Keyboard_key_no=Keypad[9];
 178   2                      printf("%C",Keyboard_key_no);
 179   2                      //break;
C51 COMPILER V9.02   KEYBOARD                                                              04/01/2013 22:01:20 PAGE 4   

 180   2                      }
 181   1              if(Keyboard_key_11==KEYBOARD_KEY_PRESSED)
 182   1                      {
 183   2                      delay_in_ms(100);
 184   2                      if(Keyboard_key_11==KEYBOARD_KEY_PRESSED)
 185   2                      Keyboard_key_no=Keypad[10];
 186   2                      printf("%C",Keyboard_key_no);
 187   2                //  break;
 188   2                      }
 189   1              if(Keyboard_key_12==KEYBOARD_KEY_PRESSED)
 190   1                      {
 191   2                      delay_in_ms(100);
 192   2                      if(Keyboard_key_12==KEYBOARD_KEY_PRESSED)
 193   2                      Keyboard_key_no=Keypad[11];
 194   2                      printf("%C",Keyboard_key_no);
 195   2              //      break;
 196   2                      }
 197   1              
 198   1              //while((P2==0xff)&&KEYBOARD_KEY_9==1&& KEYBOARD_KEY_10==1&&KEYBOARD_KEY_11==1&&Keyboard_key_12 );
 199   1              //      return  Keyboard_key_no;
 200   1              
 201   1              
 202   1      
 203   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    667    ----
   CONSTANT SIZE    =     60    ----
   XDATA SIZE       =     22       1
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
